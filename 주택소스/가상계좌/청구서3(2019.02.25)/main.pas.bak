//------------------------------------------------------------------------------
//
// Unit        : main.pas
// Author      :
// Description :
// History
//   V 1.00 : 2006.04.25 처음 작성
//
//------------------------------------------------------------------------------
{
  1. 본 청구서에서 착수금은 기본적으로 회계에서 자동으로 끌어오도록 되어있습니다.
  자동으로 끌어오기때문에 수동으로 입력하더라도 다시 DLL이 로드될때 착수금의 데이터가
  회계데이터로 맞춰지게 되어있습니다.
  이 기능을 수동입력이 가능하도록 변경하실 법인은
  ProcessParameters프로시져에서  cxLabel9Click(nil); 라인을 주석처리하시면 됩니다.

  
}



{$WARN SYMBOL_PLATFORM OFF}

unit main;                                       
                                                                                                 
interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms,
  ExtCtrls, Dialogs, dxLink, dxForm, dxMessages, dxDLLManager, StdCtrls,
  ComCtrls, TB2Item, TBX, TB2Dock, TB2Toolbar, ImgList, EasyTable,
  frxClass, frxDBSet, DB, cxMemo, cxDBEdit, cxLabel, cxControls,
  cxContainer, cxEdit, cxTextEdit, cxStyles, cxCustomData, cxGraphics,
  cxFilter, cxData, cxDataStorage, cxGridLevel, cxGridCustomTableView,
  cxGridTableView, cxGridBandedTableView, cxGridSheet, cxClasses,
  cxGridCustomView, cxGrid, Menus, cxLookAndFeelPainters, cxButtons,
  cxCurrencyEdit, cxGroupBox, cxRadioGroup, cxCheckBox, RzButton, RzLabel,
  RzPanel, kbmMemTable, kbmMWCustomConnectionPool, kbmMWCustomDataset,
  kbmMWClientDataset, kbmMWStreamFormat, kbmMWBinaryStreamFormat;

type
  TXForm1 = class(TXForm)
    tbl_gam_info: TEasyTable;
    DS_gam_info: TDataSource;
    fd_gam_info: TfrxDBDataset;
    fd_tbl0: TfrxDBDataset;                               
    DS_tbl0: TDataSource;
    tbl0: TEasyTable;
    Qryexec: TEasyQuery;
    cxLabel2: TcxLabel;
    cxLabel1: TcxLabel;
    cxLabel3: TcxLabel;
    cxLabel5: TcxLabel;
    cxLabel6: TcxLabel;
    cxLabel12: TcxLabel;
    cxLabel20: TcxLabel;
    cxLabel22: TcxLabel;
    cxLabel23: TcxLabel;
    cxLabel28: TcxLabel;
    cxLabel31: TcxLabel;
    cxLabel32: TcxLabel;
    cxLabel17: TcxLabel;
    cxLabel18: TcxLabel;
    cxLabel19: TcxLabel;
    cxLabel15: TcxLabel;
    cxLabel10: TcxLabel;
    cxLabel11: TcxLabel;
    cxLabel14: TcxLabel;
    cxLabel37: TcxLabel;
    cxLabel38: TcxLabel;
    cxLabel4: TcxLabel;
    cxLabel8: TcxLabel;
    cxLabel9: TcxLabel;
    cxLabel13: TcxLabel;
    cxLabel16: TcxLabel;
    cxLabel7: TcxLabel;
    cxLabel21: TcxLabel;
    cxLabel24: TcxLabel;
    cxDBTextEdit11: TcxDBTextEdit;
    cxDBTextEdit2: TcxDBTextEdit;
    cxDBTextEdit3: TcxDBTextEdit;
    cxDBTextEdit25: TcxDBTextEdit;
    cxDBTextEdit5: TcxDBTextEdit;
    cxDBTextEdit24: TcxDBTextEdit;
    cxDBTextEdit4: TcxDBTextEdit;
    f_price0: TcxDBCurrencyEdit;
    f_price1: TcxDBCurrencyEdit;
    f_price: TcxDBCurrencyEdit;
    f_Price10: TcxDBCurrencyEdit;
    cxDBMemo7: TcxDBMemo;
    f_Price15: TcxDBCurrencyEdit;
    cxDBMemo8: TcxDBMemo;
    f_SUSU: TcxDBCurrencyEdit;
    cxButton2: TcxButton;
    f_YEBI: TcxDBCurrencyEdit;
    cxDBMemo2: TcxDBMemo;
    f_MULJOSABI_count: TcxTextEdit;
    f_MULJOSABI: TcxDBCurrencyEdit;
    cxDBMemo3: TcxDBMemo;
    f_GONGBU: TcxDBCurrencyEdit;
    cxDBMemo4: TcxDBMemo;
    f_SILBI: TcxDBCurrencyEdit;
    f_YONGYEUK: TcxDBCurrencyEdit;
    f_SUSUSUM: TcxDBCurrencyEdit;
    f_JELSA: TcxDBCurrencyEdit;
    f_TAX: TcxDBCurrencyEdit;
    f_TOTAL: TcxDBCurrencyEdit;
    f_DEPOSIT: TcxDBCurrencyEdit;
    f_BILL: TcxDBCurrencyEdit;
    cxButton1: TcxButton;
    cxLabel25: TcxLabel;
    f_price2: TcxDBCurrencyEdit;
    cxDBMemo1: TcxDBMemo;
    f_price0_1: TcxDBCurrencyEdit;
    f_price1_1: TcxDBCurrencyEdit;
    cxLabel26: TcxLabel;
    cxLabel27: TcxLabel;
    f_Price20: TcxDBCurrencyEdit;
    cxDBMemo5: TcxDBMemo;
    cxLabel29: TcxLabel;
    cxDBMemo6: TcxDBMemo;
    subprint_yn: TcxRadioGroup;
    cxLabel30: TcxLabel;
    f_TOJOSABI_count: TcxTextEdit;
    f_TOJOSABI: TcxDBCurrencyEdit;
    cxDBMemo9: TcxDBMemo;
    Panel1: TPanel;
    cxLabel33: TcxLabel;
    cxDBTextEdit6: TcxDBTextEdit;
    Chk_Sale_chk: TcxDBCheckBox;
    Chk_prn_cut_chk: TcxDBCheckBox;
    radio_Mode: TcxDBRadioGroup;
    cmb_susuj: TcxDBRadioGroup;
    gs_yn: TcxDBRadioGroup;
    btn_total: TRzBitBtn;
    btn_susu_compute: TRzBitBtn;
    sbtn_other_compute: TRzBitBtn;
    btn_backward: TRzBitBtn;
    cxButton6: TRzBitBtn;
    cxButton7: TRzBitBtn;
    cxButton8: TRzBitBtn;
    RzBitBtn5: TRzBitBtn;
    Hint_Panel: TRzPanel;
    RzLabel2: TRzLabel;
    RzBitBtn6: TRzBitBtn;
    cxLabel34: TcxLabel;
    cxLabel35: TcxLabel;
    cxLabel36: TcxLabel;
    cxLabel39: TcxLabel;
    edit_rate: TcxDBTextEdit;
    cxLabel40: TcxLabel;
    edit_DC: TcxDBTextEdit;
    cxLabel41: TcxLabel;
    frxReport1: TfrxReport;
    cxLabel42: TcxLabel;
    cxDBTextEdit7: TcxDBTextEdit;
    cxLabel43: TcxLabel;
    cxLabel44: TcxLabel;
    CheckBox1: TCheckBox;
    StreamBIN: TkbmMWBinaryStreamFormat;
    DepositQry: TkbmMWClientQuery;
    DepositQry1: TkbmMWClientQuery;
    cxDBTextEdit1: TcxDBTextEdit;
    susu8: TcxLabel;
    susu12: TcxLabel;
    rdbChargeGubun: TcxDBRadioGroup;
    pnlVolume: TPanel;
    txtMixChargeTOTAL: TcxDBCurrencyEdit;
    cxLabel62: TcxLabel;
    cxLabel64: TcxLabel;
    txtLandVolumeCharge: TcxDBCurrencyEdit;
    txtBuildVolumeCharge: TcxDBCurrencyEdit;
    txtTreeVolumeCharge: TcxDBCurrencyEdit;
    txtMoveFeeVolumeCharge: TcxDBCurrencyEdit;
    cxLabel61: TcxLabel;
    cxLabel67: TcxLabel;
    cxLabel68: TcxLabel;
    cxLabel72: TcxLabel;
    txtStructureVolumeCharge: TcxDBCurrencyEdit;
    cxLabel71: TcxLabel;
    txtBusinessVolumeCharge: TcxDBCurrencyEdit;
    cxLabel73: TcxLabel;
    txtChargePartial: TcxDBCurrencyEdit;
    cxDBMemo10: TcxDBMemo;
    cxDBMemo11: TcxDBMemo;
    cxLabel76: TcxLabel;
    cxLabel63: TcxLabel;
    txtVolumeCharge: TcxDBCurrencyEdit;
    cxLabel69: TcxLabel;
    txtVolumeChargePartial: TcxDBCurrencyEdit;
    cxLabel70: TcxLabel;
    cxDBMemo13: TcxDBMemo;
    txtResearchLandVolumeCharge: TcxDBCurrencyEdit;
    txtChargeRest: TcxDBCurrencyEdit;
    cxLabel84: TcxLabel;
    cxLabel56: TcxLabel;
    cxLabel57: TcxLabel;
    cxLabel52: TcxLabel;
    txtTreeCnt: TcxDBCurrencyEdit;
    txtPHILJI: TcxDBCurrencyEdit;
    cxDBMemo12: TcxDBMemo;
    cxLabel55: TcxLabel;
    txtLandPrice: TcxDBCurrencyEdit;
    cxLabel47: TcxLabel;
    txtBuildPrice: TcxDBCurrencyEdit;
    cxLabel49: TcxLabel;
    txtTreePrice: TcxDBCurrencyEdit;
    txtStructurePrice: TcxDBCurrencyEdit;
    txtMoveFeePrice: TcxDBCurrencyEdit;
    txtEtcPrice: TcxDBCurrencyEdit;
    cxLabel48: TcxLabel;
    cxLabel46: TcxLabel;
    cxLabel50: TcxLabel;
    cxLabel51: TcxLabel;
    cxLabel82: TcxLabel;
    cxLabel60: TcxLabel;
    cxDBMemo14: TcxDBMemo;
    cxDBMemo15: TcxDBMemo;
    txtMixCharge: TcxDBCurrencyEdit;
    txtMixChargeJELSA: TcxDBCurrencyEdit;
    cxLabel79: TcxLabel;
    cxLabel81: TcxLabel;
    txtMixChargeTAX: TcxDBCurrencyEdit;
    btnVolumeAutoCalc: TRzBitBtn;
    cxLabel78: TcxLabel;
    cxDBMemo16: TcxDBMemo;
    cxLabel65: TcxLabel;
    txtResearchBuildVolumeCharge: TcxDBCurrencyEdit;
    cxLabel83: TcxLabel;
    cxDBMemo17: TcxDBMemo;
    cxLabel80: TcxLabel;
    cxLabel53: TcxLabel;
    txtLandVolumeCharge_Origin: TcxDBCurrencyEdit;
    cxLabel54: TcxLabel;
    txtTreeVolumeCharge_Origin: TcxDBCurrencyEdit;
    txtLaw: TRzLabel;
    procedure XFormClose(Sender: TObject; var Action: TCloseAction);
    procedure XFormDestroy(Sender: TObject);
    procedure XFormLink(Sender: TObject; ALink: TXLink);
    procedure f_price0Exit(Sender: TObject);
    procedure btn_totalClick(Sender: TObject);
    procedure cxButton2Click(Sender: TObject);
    procedure radio_ModeClick(Sender: TObject);
    procedure btn_susu_computeClick(Sender: TObject);
    procedure sbtn_other_computeClick(Sender: TObject);
    procedure btn_backwardClick(Sender: TObject);
    procedure cxButton6Click(Sender: TObject);
    procedure cxButton7Click(Sender: TObject);
    procedure cxButton8Click(Sender: TObject);
    procedure f_MULJOSABI_countPropertiesEditValueChanged(Sender: TObject);
    procedure cxButton1Click(Sender: TObject);
    procedure cmb_susujPropertiesChange(Sender: TObject);
    procedure radio_ModePropertiesChange(Sender: TObject);
    procedure f_TOJOSABI_countPropertiesEditValueChanged(Sender: TObject);
    procedure cxLabel21Click(Sender: TObject);
    procedure f_Price10Exit(Sender: TObject);
    procedure cmb_susujClick(Sender: TObject);
    procedure RzBitBtn5Click(Sender: TObject);
    procedure Chk_Sale_chkClick(Sender: TObject);
    procedure cxLabel19Click(Sender: TObject);
    procedure cxLabel35Click(Sender: TObject);
    procedure cxLabel36Click(Sender: TObject);
    procedure cxLabel39Click(Sender: TObject);
    procedure edit_DCExit(Sender: TObject);
    procedure cxLabel9Click(Sender: TObject);
    procedure CheckBox1Click(Sender: TObject);
    procedure XFormShow(Sender: TObject);
    procedure subprint_ynExit(Sender: TObject);
    procedure susu8Click(Sender: TObject);
    procedure susu12Click(Sender: TObject);
    procedure btnVolumeAutoCalcClick(Sender: TObject);
    procedure rdbChargeGubunClick(Sender: TObject);
  private
    AppInfo : Pointer;
    ChildDataBase: TEasyDataBase;
    SYSDataBase: TEasyDataBase;
       ///2012.09.27 멤버변수 추가.시작.
    FBolCompensation: Boolean;
    FintObjectCount: Integer;
    FintBisinessCount: Integer;
    ///2012.09.27 멤버변수 추가.끝.
///2012.10.05 멤버변수 추가.시작.
    FLocalQry: TEasyQuery;
    FKbmQry: TkbmMWClientQuery;
    ///2012.10.05 멤버변수 추가.끝.
    procedure Compute_susu_Sub; //수수료계산
    procedure Compute_Sum_sub; //수수료합계
    procedure Compute_susu; //수수료계산,합계
    procedure OpenAcount; //은행계좌창오픈
    procedure OpenTrips; //출장비창오픈
    procedure chk_Mode;
    procedure DomakeParam;
    procedure Compute_backward;                                                 //역산
    procedure memo_10_Price;                                                    //적요
    procedure memo_15_Price;                                                    //적요
    procedure memo_Total_price;                                                 //적요
    procedure ProcessParameters(ALink: TXLink);
    procedure Field_AlterProc(gTableNme, Str_Field: string);

      // 이하 종량제 신규 method//--이 메소드를 사용한 부분이 다 종량 관련 부분. 이걸로 찾아서 적용하세요.
    procedure Sum_VolumeChargeFromObject; //종량제 수수료 계산하기.
    procedure Compute_VolumeCharge; //종량제 수수료 계산하기.
    function Discount_VolumeLandCharge(LandVolume: Currency; LancCnt: Integer): Currency; //토지 수량 할일율 계산하기
    function Discount_VolumeTreeCharge(const TreeVolume: Currency; const TreeCnt: Integer): Currency;
    procedure Clear_VolumeCharge;
 

  ///2012.09.27 변수 추가 .프로시져 변경. 시작
    procedure SumVolumeChargeForLand(var LandPrice, LandVolumeCharge: Currency; var LandCnt: Integer; //const ATableName: string;///2012.10.05
      var APublic10Price, APublic15Price, A10Price, A15Price: Currency);
    procedure SumVolumeChargeForBuild(var BuildPrice, BuildVolumeCharge: Currency; var DongCnt, TreeCnt: Integer;
      var TreePrice, StructurePrice, MoveFeePrice, EtcPrice, TreeVolumeCharge, StructureVolumeCharge, BusinessVolumeCharge: Currency; //const ATableName: string;///2012.10.05
      var APublic10Price, A10Price, A15Price: Currency);
    ///2012.09.27 변수 추가 .프로시져 변경. 끝.

  public
    bCheck :Boolean;
  end;

  procedure OpenForm(var AHandle: Integer; AParent: TObject = nil; ALink: TXLink = nil);

implementation

{$R *.DFM}

uses
    CommFuncU, PFConfig, ApConfig, UserData, Trips, Acount
///2012-09-13 종량제 uses 절 CommModule 추가.
  , CommModule;

//
// DLL Export function
//
procedure OpenForm(var AHandle: Integer; AParent: TObject = nil; ALink: TXLink = nil);
var
  Form: TXForm1;
begin
  Form := TXForm1.Create(Application);
  try
    with Form do
    begin
      AHandle := SetParentControl(AParent, True);

      if AParent = nil then
      begin
        BorderStyle := bsDialog;
        //FormStyle := fsMDIChild;
      end;

      if Assigned(ALink) then
        ProcessParameters(ALink);

      if AParent <> nil then
        Show
      else
        ShowModal;
    end;
  except;
  end

end;

procedure TXForm1.subprint_ynExit(Sender: TObject);
begin
// 나현찬 추가
 if subprint_yn.ItemIndex = 0 then
  begin
    tbl0.Edit;
    tbl0.FieldByName('chk_prn_detail').AsBoolean := false ;
    tbl0.Post;
  end
 else
   begin
    tbl0.Edit;
    tbl0.FieldByName('chk_prn_detail').AsBoolean := true ;
    tbl0.Post;
   end;  
end;



{ TXForm1 }

//
// 초기 파라메터 처리 루틴
//
procedure TXForm1.ProcessParameters(ALink: TXLink);
var
  chk_field1,chk_field2,chk_field3,chk_field4,chk_field5,chk_field6,chk_field7,chk_field8,chk_field9,chk_field10,chk_field11,chk_field12,chk_field13,chk_field14 : integer;
begin
  ChildDataBase := TEasyDataBase(ALink.ParamByInteger('DATABASE'));
  SYSDataBase   := TEasyDataBase(ALink.ParamByInteger('SYSDATABASE'));
  AppInfo       := Pointer(ALink.ParamByInteger('AppInfo'));

  with tbl_gam_info do begin
    DatabaseName := ChildDataBase.DatabaseName;
    SessionName  := ChildDataBase.SessionName;
    TableName    := 'gam_info';
    Open;
    Edit;
  end;

  with Qryexec do begin
    DatabaseName := ChildDataBase.DatabaseName;
    SessionName  := ChildDataBase.SessionName;
  end;

  try
    chk_field1 := -1;
    chk_field2 := -1;
    chk_field3 := -1;
    chk_field4 := -1;
    chk_field5 := -1;
    chk_field6 := -1;
    chk_field7 := -1;
    chk_field8 := -1;
    chk_field9 := -1;
    chk_field10 := -1;
    chk_field11 := -1;
    chk_field12 := -1;
      chk_field13 := -1;
        chk_field14 := -1;

    with Qryexec do begin
      Close;
      SQL.Clear;
      SQL.Text := ' SELECT * FROM  ' + ALink.ParamByString('TABLENAME');
      //showmessage(   SQL.Text);
      Open;
    end;

    if Qryexec.FindField('Chk_Auto') = nil then
      chk_field1 := 1;
    if Qryexec.FindField('Chk_Dambo') = nil then
      chk_field2 := 1;
    if Qryexec.FindField('Chk_Amt') = nil then
      chk_field3 := 1;
    if Qryexec.FindField('Chk_His') = nil then
      chk_field4 := 1;
    if Qryexec.FindField('Reg_CopNo') = nil then
      chk_field5 := 1;
    if Qryexec.FindField('Chk_Sale') = nil then
      chk_field6 := 1;
    if Qryexec.FindField('Chk_prn_cut') = nil then
      chk_field7 := 1;
    if Qryexec.FindField('Chk_Tax') = nil then
      chk_field8 := 1;
    if Qryexec.FindField('Chk_prn_detail') = nil then
      chk_field9 := 1;
    if Qryexec.FindField('SusuRate') = nil then
      chk_field10 := 1;
    if Qryexec.FindField('SusuDC') = nil then
      chk_field11 := 1;
    if Qryexec.FindField('Add_doc') = nil then
      chk_field12 := 1;
    if Qryexec.FindField('requestdate') = nil then
      chk_field13 := 1;

    if Qryexec.FindField('ChargeGubun') = nil then
      chk_field14 := 1;

    Qryexec.Close;
    if (chk_field1 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_Auto  integer');
    if (chk_field2 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_Dambo  integer');
    if (chk_field3 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_Amt  integer');
    if (chk_field4 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_His  integer');
    if (chk_field5 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Reg_CopNo string(20)');
    if (chk_field6 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_Sale logical');
    if (chk_field7 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_prn_cut logical');
    if (chk_field8 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_Tax  integer');
    if (chk_field9 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Chk_prn_detail logical');
    if (chk_field10 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'SusuRate  string(6)');
    if (chk_field11 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'SusuDC string(6)');
    if (chk_field12 = 1) then
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'Add_doc string(10)');
    if (chk_field13 = 1) then
     Field_AlterProc(ALink.ParamByString('TABLENAME'), 'requestdate string(16)');


        //종량제 관련 컬럼 추가
    if (chk_field14 = 1) then begin
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'LandPrice  Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'BuildPrice   Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'TreePrice     Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'StructurePrice  Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'MoveFeePrice    Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'EtcPrice       Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'VolumeCharge    Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'LandVolumeCharge  Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'LandVolumeCharge_Origin   Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'BuildVolumeCharge    Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'TreeVolumeCharge    Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'TreeVolumeCharge_Origin   Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'StructureVolumeCharge    Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'BusinessVolumeCharge    Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'MoveFeeVolumeCharge    Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'TreeCnt          Integer');

      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'ChargeGubun string(1)');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'ChargePartial Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'VolumeChargePartial Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'ChargeRest Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'ResearchLandVolumeCharge Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'ResearchBuildVolumeCharge Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'MixCharge Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'MixChargeJELSA Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'MixChargeTAX Currency');
      Field_AlterProc(ALink.ParamByString('TABLENAME'), 'MixChargeTOTAL Currency');
    end;








  except
    ;
  end;

  with tbl0 do begin
    DatabaseName := ChildDataBase.DatabaseName;
    SessionName  := ChildDataBase.SessionName;
    TableName    := ALink.ParamByString('TABLENAME');
    Open;
    Edit;
  end;

  DomakeParam;
  if ALink.ParamByString('Command') = 'ALLPRINT' then begin
    Make_PrintSource(TfrxReport(ALink.ParamByInteger('Target_Print')),
                     frxReport1,
                     Qryexec,
                     TItemData(AppInfo^).code
                     );
  end;
  ///2012.09.27. 주석처리.
 //if ( (tbl_gam_info.FieldByName('price0_1').AsCurrency > 0) or (tbl_gam_info.FieldByName('price1_1').AsCurrency > 0) ) then
 //   gs_yn.ItemIndex := 1;

  if ( tbl0.FieldByName('Chk_His').AsString = '0' ) then
    cxLabel21.Caption := '절 사 금 액 [수동]'
  else begin
    cxLabel21.Caption := '절 사 금 액 [자동]';
    tbl0.FieldByName('Chk_His').AsString := '1';
  end;

  if ( tbl0.FieldByName('Chk_Tax').AsString = '0' ) then
    cxLabel19.Caption := '부가 가치세 [수동]'
  else begin
    cxLabel19.Caption := '부가 가치세 [자동]';
    tbl0.FieldByName('Chk_Tax').AsString := '1';
  end;

 // 나현찬 주석 20121008 if not ( tbl0.FieldByName('Chk_Auto').AsString = '1' ) then
  // 나현찬 주석 20121008  tbl0.FieldByName('Chk_Auto').AsInteger := 0;
 // if (tbl0.FieldByName('Chk_Dambo').AsString = '') then
 //   tbl0.FieldByName('Chk_Dambo').AsInteger := 0;
  


 //나현찬 협회 주석  if not ( tbl0.FieldByName('Chk_Dambo').AsString = '1' ) then
 //나현찬 협회 주석   tbl0.FieldByName('Chk_Dambo').AsInteger := 0;

 // if not (tbl0.FieldByName('Chk_Auto').AsString = '1') then
  //  tbl0.FieldByName('Chk_Auto').AsInteger := 0;
 ///////////////협회꺼 다 주석처리하고 원래 우리꺼
 //// 나현찬
 /// 담보인데 자꾸 체크박스가 경매로 간다.
 if not ( tbl0.FieldByName('Chk_Auto').AsString = '1' ) then
    tbl0.FieldByName('Chk_Auto').AsInteger := 0;

  if not ( tbl0.FieldByName('Chk_Dambo').AsString = '1' ) then
    tbl0.FieldByName('Chk_Dambo').AsInteger := 0;

 ///나현찬 주석  chk_Mode;
 //////////////////////////////// 나현찬 추가
 if radio_Mode.ItemIndex = 0 then begin
    f_Price10.Enabled     := False;
    f_Price15.Enabled     := False;
    f_SUSU.Enabled        := False;
    f_SUSUSUM.Enabled     := False;
    f_TOTAL.Enabled       := False;
    f_BILL.Enabled        := False;
    btn_backward.Enabled  := False;
    f_price0.Enabled           := False;
    f_price1.Enabled           := False;
    f_price0_1.Enabled  := False;
    f_price1_1.Enabled  := False;
    f_price.Enabled            := False;
    f_price2.Enabled           := False;
    f_Price20.Enabled          := False;

    Chk_Sale_chk.Checked := False;

  end else begin
    f_Price10.Enabled     := True;
    f_Price15.Enabled     := True;
    f_SUSU.Enabled        := True;
    f_SUSUSUM.Enabled     := True;
    f_TOTAL.Enabled       := True;
    f_BILL.Enabled        := True;
    btn_backward.Enabled  := True;
    f_price0.Enabled           := True;
    f_price1.Enabled           := True;
    f_price0_1.Enabled  := True;
    f_price1_1.Enabled  := True;
    f_price.Enabled            := False;
    f_price2.Enabled           := True;
    f_Price20.Enabled          := True;

    Chk_Sale_chk.Checked := true;
   end;
 ////////////////////////////////
  if not ( tbl0.FieldByName('Chk_Amt').AsString = '1' ) then
    tbl0.FieldByName('Chk_Amt').AsInteger := 0;

  if not ( tbl0.FieldByName('Chk_Sale').AsBoolean ) then
    tbl0.FieldByName('Chk_Sale').AsBoolean := False;

  if not ( tbl0.FieldByName('Chk_prn_cut').AsBoolean ) then
    tbl0.FieldByName('Chk_prn_cut').AsBoolean := False;
    
  if not ( tbl0.FieldByName('Chk_prn_detail').AsBoolean ) then
    tbl0.FieldByName('Chk_prn_detail').AsBoolean := False;

  subprint_yn.ItemIndex := 1;
  if tbl0.FieldByName('Chk_prn_detail').AsBoolean then
    subprint_yn.ItemIndex := 0;

  if Trim( tbl0.FieldByName('SusuRate').AsString ) = '' then
    tbl0.FieldByName('SusuRate').AsString := '1.0';
  if Trim( tbl0.FieldByName('SusuDC').AsString ) = '' then
    tbl0.FieldByName('SusuDC').AsString := '1.0';

  if Trim( tbl_gam_info.FieldByName('Account').AsString ) = '' then
  begin
    tbl_gam_info.FieldByName('Account').AsString :=
      PF_Config.OtherInfo.AccountNum.Text;
  end;

  if Trim( tbl0.FieldByName('Add_doc').AsString ) = '' then
    tbl0.FieldByName('Add_doc').AsString := '1';
 // 나현찬 협회 주석 tbl0.FieldByName('Add_doc').AsString := '2';  // 나현찬 협회 20121008
if  Trim(tbl0.FieldByName('requestdate').AsString) = '' then
      tbl0.FieldByName('requestdate').AsString :=tbl_gam_info.FieldByName('requestdate').AsString;

 // 나현찬 협회 주석  cxLabel9Click(nil);
///2012.09.27. 보상 멤버 변수 기본값세팅..시작..
  FBolCompensation := False;
 // 나현찬 주석 20121008 if (tbl_gam_info.Active) and (StrToIntDef(tbl_gam_info.FieldByName('Purposecode').AsString, 0) > 20) //
 // 나현찬 주석 20121008  and (StrToIntDef(tbl_gam_info.FieldByName('Purposecode').AsString, 0) < 30) then begin
   // 나현찬 주석 하고 추가 20121008
   if copy(tbl_gam_info.FieldByName('doc_id').AsString,9,1)  = '1' then  begin
    FBolCompensation := True;
  end;
  FintObjectCount := 0;
  FintBisinessCount := 0;
  ///2012.09.27. 보상 멤버 변수 기본값세팅.끝.
 ///2012.10.05 멤버변수 초기화. 시작.
  FLocalQry := TEasyQuery.Create(nil);
  FLocalQry.DatabaseName := ChildDataBase.DatabaseName;
  FLocalQry.SessionName := ChildDataBase.SessionName;

  FKbmQry := TkbmMWClientQuery.Create(nil);

  with FKbmQry do begin
    TransportStreamFormat := cm.ApStreamFormat;
    SessionName := 'ApWorksClient';
    QueryService := 'KAPA_Apwork';
    QueryServiceVersion := '1.0';
  end;
  ///2012.10.05 멤버변수 초기화. 끝.
end;

procedure TXForm1.XFormClose(Sender: TObject; var Action: TCloseAction);
begin
///2012.10.05 멤버변수 Free. 시작.
  FreeAndNil(FKbmQry);
  FreeAndNil(FLocalQry);
  ///2012.10.05 멤버변수 Free. 끝.
  if (tbl0.state in [dsInsert, dsEdit]) then
    tbl0.Post;
  tbl0.close;
  if (tbl_gam_info.state in [dsInsert, dsEdit]) then
    tbl_gam_info.Post;
  tbl_gam_info.close;
  ChildDataBase := nil;
  SYSDataBase := nil;
  Action := cafree;
end;

procedure TXForm1.XFormDestroy(Sender: TObject);
begin
  //
end;

procedure TXForm1.XFormLink(Sender: TObject; ALink: TXLink);
begin


    if (ALink.Command = 'PRINT')   then begin
        if (CheckBox1.Checked  = false)  then   begin
          cSParam.Values['Is_Pdf'] := 'False';
       end else begin
          cSParam.Values['Is_Pdf'] := 'True';
       end;

    Doprint(Qryexec,frxReport1,TItemData(AppInfo^).code);
  end else if ALink.Command = 'SAVE' then begin

    if (tbl0.state in [dsInsert, dsEdit]) then
      tbl0.Post;
    tbl0.edit;
    if (tbl_gam_info.state in [dsInsert, dsEdit]) then
      tbl_gam_info.Post;
    tbl_gam_info.edit;

  end else if ALink.Command = 'DESIGN' then begin

    Dodesign(Qryexec,frxReport1,TItemData(AppInfo^).code)
  end else if ALink.Command = 'PDF' then begin
     if (CheckBox1.Checked  = false)  then begin
          cSParam.Values['Is_Pdf'] := 'False';
     end else begin
          cSParam.Values['Is_Pdf'] := 'True';
     end;

    DoPDF(Qryexec,frxReport1,TItemData(AppInfo^).code, TItemData(AppInfo^).sd_title+'.pdf');
  end else if ALink.Command = 'REPARAM' then begin
    DomakeParam;
  end else if ALink.Command = 'RefreshFr3' then begin
    //DoRefreshFr3(Qryexec,TItemData(AppInfo^).code,TItemData(AppInfo^).sd_title);
    DoRefreshFr3(Qryexec, SYSDataBase, AppInfo);
  end;
end;

procedure TXForm1.DomakeParam;
begin
  with (cSParam) do begin
    clear;
    Add('company_name='+PF_Config.OtherInfo.CompanyName);
    Add('company_tel='+PF_Config.OtherInfo.CompanyTel);
    Add('company_fax='+PF_Config.OtherInfo.CompanyFax);
    Add('writer_name='+UserInfo.UserName);
    if (pf_config.OtherInfo.ConvertMode = cmMode1) then
    begin
      Add('p_type=1');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode2) then
    begin
      Add('p_type=2');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode3) then
    begin
      Add('p_type=3');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode4) then
    begin
      Add('p_type=4');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode5) then
    begin
      Add('p_type=5');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode6) then
    begin
      Add('p_type=6');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode7) then
    begin
      Add('p_type=7');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode8) then
    begin
      Add('p_type=8');
    end
    else if (pf_config.OtherInfo.ConvertMode = cmMode9) then
    begin
      Add('p_type=9');
    end
    else begin
      Add('p_type=1');
    end;
    Add('Mark='+TItemData(AppInfo^).sd_mark);
    Add('sub_title='+TItemData(AppInfo^).sd_sub_title);
    if subprint_yn.ItemIndex = 0 then
      Add('detail_yn=Y')
    else
      Add('detail_yn=N');
  end;

end;

procedure TXForm1.f_price0Exit(Sender: TObject);
begin
  // EditExit
  Compute_susu;
end;

procedure TXForm1.Compute_susu;
var TSUSU, ASUSU, Su_Value, SUSU10, SUSU15, SUSU00: Currency;
begin
  ///2012.09.27 변경. 시작...
  if FBolCompensation then //보상일때
  begin
    //종가 종량 다 여기서 새로 만든 로직으로 합산.
    if tbl0.FieldByName('Chk_Auto').AsInteger = 0 then
    begin
      Sum_VolumeChargeFromObject;
      with tbl_gam_info do
      begin
        Su_Value := 0; SUSU10 := 0; SUSU15 := 0; SUSU00 := 0;
      // 토지나 영업권제외한 물건있을때. 종가수수료계산. 금액으로 하면. 0 원도 기본수수료 나가기 땜에 갯수로함.
        if (tbl_gam_info.FieldByName('PHILJI').AsCurrency > 0) or ((FintObjectCount - FintBisinessCount) > 0) then
        begin
          SUSU10 := FieldByName('price0').AsCurrency;
          SUSU15 := FieldByName('Price1').AsCurrency;
          Su_Value := GetSusu(SUSU10, SUSU15, SUSU00, strtofloat(edit_rate.text), '2'); // var 사용
        end;
        FieldByName('Price00').AsCurrency := SUSU00;
        FieldByName('Price10').AsCurrency := SUSU10;
        FieldByName('Price15').AsCurrency := SUSU15;

      //영업권이 평가가 있을 때만 수수료 계산.
        if FintBisinessCount > 0 then
        begin
          TSUSU := 0; ASUSU := 0;
          TSUSU := FieldByName('price2').AsCurrency;
          FieldByName('Price20').AsCurrency := GetSusu(TSUSU, ASUSU, ASUSU, strtofloat(edit_rate.text), '1'); //var 안씀.
        end
        else FieldByName('Price20').AsCurrency := 0;
      //합산
        FieldByName('SUSU').AsCurrency := Trunc(Su_Value + FieldByName('Price20').AsCurrency);
      end;
      Compute_Sum_sub; //종가수수료 계산.
    end
    else begin
      tbl_gam_info.FieldByName('price0').AsCurrency := f_price0.Value;
      tbl_gam_info.FieldByName('price1').AsCurrency := f_price1.Value;
      tbl_gam_info.FieldByName('price0_1').AsCurrency := f_price0_1.Value;
      tbl_gam_info.FieldByName('price1_1').AsCurrency := f_price1_1.Value;
      tbl_gam_info.FieldByName('price2').AsCurrency := f_price2.Value; //영업권 합산금액
      if tbl0.FieldByName('Chk_Amt').AsInteger = 0 then //감정평가액
        tbl_gam_info.FieldByName('price').AsCurrency := tbl_gam_info.FieldByName('price0').AsCurrency
          + tbl_gam_info.FieldByName('price1').AsCurrency
      else //개별지가액
        tbl_gam_info.FieldByName('price').AsCurrency := tbl_gam_info.FieldByName('price0_1').AsCurrency
          + tbl_gam_info.FieldByName('price1_1').AsCurrency;

      tbl_gam_info.FieldByName('Price10').AsCurrency := f_Price10.Value;
      tbl_gam_info.FieldByName('Price15').AsCurrency := f_Price15.Value;
      tbl_gam_info.FieldByName('SUSU').AsCurrency := f_SUSU.Value;
      tbl_gam_info.FieldByName('SUSUSUM').AsCurrency := f_SUSUSUM.Value;
      tbl_gam_info.FieldByName('TOTAL').AsCurrency := f_TOTAL.Value;
      tbl_gam_info.FieldByName('BILL').AsCurrency := f_BILL.Value;
      //영업권
      tbl_gam_info.FieldByName('Price20').AsCurrency := f_Price20.Value;
    end;


    if tbl0.FieldByName('ChargeGubun').AsString = 'V' then
      Compute_VolumeCharge; //종량수수료 계산
  end
  else
  ///2012.09.27 변경. 끝...
  begin //보상 아닐때..기존로직그대로.
    if Chk_Sale_chk.Checked then begin
    //    Application.MessageBox(pchar('수수료 할인모드이므로, 자동수수료계산기능을 지원하지 않습니다.' + #13 + '수수료를 수기입력하실수 있습니다.'), '정보', MB_OK);
    end
    else
      Compute_susu_Sub; // 수수료계산
    Compute_Sum_sub; // 수수료 SUM
  end;
end;

procedure TXForm1.Compute_susu_Sub;
var
  Su_Value,Price_Value,P, P10,P15,P10_1,P15_1,TP,TP10,TP15,TSUSU,SUSU00,SUSU10,SUSU15 : Currency;
  Commission_receiptdate : String;  //경매적용을 위한 접수일자변수
  Commission_APT         : String;  //경매적용을 위한 아파트여부변수
begin
  try
    if not (tbl_gam_info.state in [dsInsert, dsEdit]) then
      tbl_gam_info.Edit;

    with (tbl_gam_info) do begin

    // 수동입력시엔 평가총액을 계산해오는 것이 아니고, 입력된 값을 사용하도록 수정
    if radio_Mode.ItemIndex = 0 then   // 자동일때
    begin

        if gs_yn.ItemIndex = 0 then
        begin
          P           := Trunc(GetTotalPriceGS(Qryexec,P10,P15,P10_1,P15_1,'D','1','1')); //일반평가금액(개별금액기준)

          P           := Trunc(GetTotalPrice(Qryexec,P10,P15,'D','1'));             //일반평가금액(감정금액기준)
          Price_Value := Trunc(P10 + P15);              // 평가총액 SUM
          TP          := Trunc(GetBSTotalPrice(Qryexec,TP10,TP15,TSUSU,'D','12'));    //영업권평가금액
          FieldByName('price').AsCurrency  := P10 + P15 + TP;   // 평가총액
          SUSU10 := P10;
          SUSU15 := P15;
        end
        else begin
          P           := Trunc(GetTotalPriceGS(Qryexec,P10,P15,P10_1,P15_1,'D','1','1')); //일반평가금액(개별금액기준)
          Price_Value := Trunc(P10_1 + P15_1);              // 평가총액 SUM
          TP          := Trunc(GetBSTotalPrice(Qryexec,TP10,TP15,TSUSU,'D','12'));    //영업권평가금액
          FieldByName('price').AsCurrency  := P10 + P15 + TP;   // 평가총액
          SUSU10 := P10_1;
          SUSU15 := P15_1;
        end;

      end
      else begin   // 수동일때
        P10 := f_price0.Value;  // 1.0배 평가총액
        P15 := f_price1.Value;  // 1.5배 평가총액d;
        P10_1 := f_price0_1.Value;  // 개별 1.0배 평가총액
        P15_1 := f_price1_1.Value;  // 개별 1.5배 평가총액
        TP := f_price2.Value;   // 영업권 평가총액
        FieldByName('price').AsCurrency  := P10 + P15 + TP;   // 평가총액

        // 수동일땐 보상평가액을 기준으로 수수료를 따로 산출
        // TP10.TP15는 본래 이 용도의 변수는 아니지만, 영업수수료계산시에 Temp로 사용.
        // 그러나 뒤에서 사용하지않고, cFlag가 1이므로 지장은 없다.
        TP10 := 0;
        TP15 := 0;
        TSUSU    := GetSusu(TP, TP10, TP15, strtofloat(edit_rate.text), '1');

        if gs_yn.ItemIndex = 0 then
        begin
          SUSU10 := P10;
          SUSU15 := P15;
        end
        else begin
          SUSU10 := P10_1;
          SUSU15 := P15_1;
        end;
      end;

      if cmb_susuj.ItemIndex = 0 then begin                               //담보
          Su_Value    := GetSusu(SUSU10, SUSU15, SUSU00, strtofloat(edit_rate.text), '2');
      end else begin                                                      //경매
//          Su_Value    := GetSusu2(SUSU10, SUSU15, SUSU00, '2');
//          2008년 3월 1일부로 경매수수료가 변화됨에 따라 코드수정
//          접수일자 기준으로 3월1일후의 접수건은 바뀐 수수료체계를 따른다.
//          그부분을 위하여 함수를 호출할때 접수일자를 같이 넘기며,
//          접수일자 파라미터가 없을때는 바뀐 수수료체계를 적용한다.  --> 이부분의 코딩은 CommFuncU에서 처리. 상단에 기준일자를 변수처리함.
          Commission_receiptdate := Trim(tbl_gam_info.FieldByName('receiptdate').AsString);
          Commission_receiptdate := User_Remove_char(Commission_receiptdate, '-');
          if Length(Commission_receiptdate) <> 8 then
            Commission_receiptdate := '-';

          Commission_APT := 'No';
          if (Trim(tbl_gam_info.FieldByName('category').AsString) = '아파트' ) then
            Commission_APT := 'Yes';

          Su_Value    := GetSusu2(SUSU10, SUSU15, SUSU00, '2', Commission_receiptdate, Commission_APT);
      end;

      FieldByName('Price00').AsCurrency   := SUSU00;
      FieldByName('Price10').AsCurrency   := SUSU10;
      FieldByName('Price15').AsCurrency   := SUSU15;

      FieldByName('price0').AsCurrency  := P10;       // 1.0배 평가총액
      FieldByName('price1').AsCurrency  := P15;       // 1.5배 평가총액
      FieldByName('price0_1').AsCurrency  := P10_1;   // 개별 1.0배 평가총액
      FieldByName('price1_1').AsCurrency  := P15_1;   // 개별 1.5배 평가총액
      FieldByName('price2').AsCurrency  := TP;        // 영업권 평가총액

      FieldByName('Price20').AsCurrency   := TSUSU;

      FieldByName('SUSU').AsCurrency  := Trunc(Su_Value + TSUSU);
      // 기존에는 1.0과 1.5의 수수료를 각각 더했으나, 최저수수료 적용문제로 인하여 리턴된 수수료를 직접 더함.
      //      FieldByName('SUSU').AsCurrency  := Trunc(SUSU10 + SUSU15 + TSUSU);

      if (edit_DC.Text <> '1.0') then
        begin
        FieldByName('Price10').AsCurrency := FieldByName('Price10').AsCurrency *
           StrToFloat(edit_DC.Text);
        FieldByName('Price15').AsCurrency := FieldByName('Price15').AsCurrency *
           StrToFloat(edit_DC.Text);
        FieldByName('Price20').AsCurrency := FieldByName('Price20').AsCurrency *
           StrToFloat(edit_DC.Text);
           
        FieldByName('SUSU').AsCurrency  := Trunc(FieldByName('Price10').AsCurrency + FieldByName('Price15').AsCurrency + FieldByName('Price20').AsCurrency);
        end;
    end;
  except
    ;
  end;
end;

procedure TXform1.Compute_Sum_sub;
var
  Su_Value,Price_Value, P10,P15 : Currency;
begin
  if not (tbl_gam_info.state in [dsInsert, dsEdit]) then
    tbl_gam_info.Edit;

  if Chk_Sale_chk.Checked then
  begin
    tbl_gam_info.FieldByName('price').AsCurrency  := f_price0.Value + f_price1.Value + f_price2.Value;   // 평가총액
  end;

  with (tbl_gam_info) do begin
    FieldByName('SUSUSUM').AsCurrency   := Trunc(FieldByName('SUSU').AsCurrency +
                                           FieldByName('YEBI').AsCurrency +
                                           FieldByName('TOJOSABI').AsCurrency +
                                           FieldByName('MULJOSABI').AsCurrency +
                                           FieldByName('GONGBU').AsCurrency +
                                           FieldByName('SILBI').AsCurrency +
                                           FieldByName('YONGYEUK').AsCurrency);

    if ( cxLabel21.Caption = '절 사 금 액 [자동]' ) then
      FieldByName('JELSA').AsCurrency     := FieldByName('SUSUSUM').AsCurrency - Trunc(FieldByName('SUSUSUM').AsCurrency / 1000)*1000;

    FieldByName('SUSUSUM').AsCurrency   := FieldByName('SUSUSUM').AsCurrency - FieldByName('JELSA').AsCurrency;

//    if ( cxLabel19.Caption = '부가 가치세 [자동]' ) then
    if (tbl0.FieldByName('Chk_Tax').AsInteger = 1) then
    begin
      FieldByName('TAX').AsCurrency       := Trunc(FieldByName('SUSUSUM').AsCurrency*0.1);
    end;
    FieldByName('TOTAL').AsCurrency     := FieldByName('SUSUSUM').AsCurrency+FieldByName('TAX').AsCurrency;
    FieldByName('BILL').AsCurrency      := Trunc(FieldByName('TOTAL').AsCurrency - FieldByName('DEPOSIT').AsCurrency);
  end;
end;

procedure TXForm1.btn_totalClick(Sender: TObject);
begin
  //전체계산버튼
  Compute_susu;
  ///2012-09-13 종량제계산 추가. 시작.
// 나현찬 협회 주석처리   btnVolumeAutoCalcClick(nil);
  ///2012-09-13 종량제계산 추가.끝.
end;

procedure TXForm1.cxButton2Click(Sender: TObject);
begin
  OpenTrips;
end;

procedure TXForm1.OpenTrips;
var
  MasterID : String;
begin
  MasterID := tbl_gam_info.fieldByName('MasterID').AsString;
  if not assigned(tripsfrm) then begin
    tripsfrm := Ttripsfrm.Create(Self);
  end;
  if MasterID = '' then begin
    showmessage('접수번호가 존재하질않습니다.');
  end else begin
    tripsfrm.trips_list(StrtoInt(MasterID));
    tripsfrm.ShowModal;
  end;
end;

procedure TXForm1.OpenAcount;
var
  OfficeID : String;
begin
  OfficeID := UserInfo.Office;
  if not assigned(Acountfrm) then begin
    Acountfrm := TAcountfrm.Create(Self);
  end;
  if OfficeID = '' then begin
    showmessage('본지사코드가 존재하지않습니다.');
  end else begin
    Acountfrm.Acount_list(OfficeID);
    Acountfrm.ShowModal;
  end;
end;

procedure TXForm1.chk_Mode;
begin
// 나현찬 수정 

  if radio_Mode.ItemIndex = 0 then begin
    f_Price10.Enabled     := False;
    f_Price15.Enabled     := False;
    f_SUSU.Enabled        := False;
    f_SUSUSUM.Enabled     := False;
    f_TOTAL.Enabled       := False;
    f_BILL.Enabled        := False;
    btn_backward.Enabled  := False;
    f_price0.Enabled           := False;
    f_price1.Enabled           := False;
    f_price0_1.Enabled  := False;
    f_price1_1.Enabled  := False;
    f_price.Enabled            := False;
    f_price2.Enabled           := False;
    f_Price20.Enabled          := False;

    Chk_Sale_chk.Checked := False;

  end;


   if radio_Mode.ItemIndex = 1 then
  begin

        f_Price10.Enabled     := True;
        f_Price15.Enabled     := True;
        f_SUSU.Enabled        := True;
        f_SUSUSUM.Enabled     := True;
        f_TOTAL.Enabled       := True;
        f_BILL.Enabled        := True;
        btn_backward.Enabled  := True;
        f_price0.Enabled           := True;
        f_price1.Enabled           := True;
        f_price0_1.Enabled  := True;
        f_price1_1.Enabled  := True;
        f_price.Enabled            := False;
        f_price2.Enabled           := True;
        f_Price20.Enabled          := True;

         Chk_Sale_chk.Checked := true;
     

  end;

   // 나현찬
{ if (userinfo.UID =81) or (userinfo.UID =77) or (userinfo.UID =83) then
    begin
       if radio_Mode.ItemIndex = 1 then
         begin
            f_Price10.Enabled     := True;
        f_Price15.Enabled     := True;
        f_SUSU.Enabled        := True;
        f_SUSUSUM.Enabled     := True;
        f_TOTAL.Enabled       := True;
        f_BILL.Enabled        := True;
        btn_backward.Enabled  := True;
        f_price0.Enabled           := True;
        f_price1.Enabled           := True;
        f_price0_1.Enabled  := True;
        f_price1_1.Enabled  := True;
        f_price.Enabled            := False;
        f_price2.Enabled           := True;
        f_Price20.Enabled          := True;

         Chk_Sale_chk.Checked := true;

         end;

    end;  }

















  if cmb_susuj.ItemIndex = 1 then
  begin
   //나현찬 주석 subprint_yn.ItemIndex := 1;   // 나현찬
  //나현찬  주석 subprint_yn.Enabled := False;

      if Not(tbl0.State in [dsEdit, dsInsert]) then
        tbl0.Edit;
      tbl0.FieldByName('Add_doc').AsString := '1';

    if (edit_rate.Text <> '1.0') then
    begin
      tbl0.FieldByName('SusuRate').AsString := '1.0';
    end;
  end
  else begin
    subprint_yn.Enabled := True;
      if Not(tbl0.State in [dsEdit, dsInsert]) then
        tbl0.Edit;
      tbl0.FieldByName('Add_doc').AsString := '2';
  end;

  if subprint_yn.ItemIndex = 0 then begin
    cSParam.Values['detail_yn'] := 'Y';
  end else begin
    cSParam.Values['detail_yn'] := 'N';
  end;

end;

procedure TXForm1.radio_ModeClick(Sender: TObject);
begin
   chk_Mode;
end;


procedure TXForm1.btn_susu_computeClick(Sender: TObject);
begin
  //수수료계산버튼
  if Chk_Sale_chk.Checked then
  begin
    Application.MessageBox(pchar('수수료 수기입력모드이므로, 자동수수료계산기능을 지원하지 않습니다.' + #13 + '수수료를 수기입력하실수 있습니다.'), '정보', MB_OK);
    Exit;
  end;
  Compute_susu_Sub;
end;

procedure TXform1.Compute_backward;
begin
  if not (tbl_gam_info.state in [dsInsert, dsEdit]) then
    tbl_gam_info.Edit;

  with (tbl_gam_info) do begin
    FieldByname('TOTAL').AsCurrency   := Trunc(FieldByName('BILL').AsCurrency + FieldByName('DEPOSIT').AsCurrency);
    FieldByName('TAX').AsCurrency     := Trunc(FieldByName('TOTAL').AsCurrency * (1/11));
    FieldByName('SUSUSUM').AsCurrency := Trunc(FieldByName('TOTAL').AsCurrency - FieldByName('TAX').AsCurrency);
    FieldByName('SUSU').AsCurrency    := Trunc(FieldByName('SUSUSUM').AsCurrency - FieldByName('YEBI').AsCurrency
                                                                           - FieldByName('MULJOSABI').AsCurrency
                                                                           - FieldByName('GONGBU').AsCurrency
                                                                           - FieldByName('SILBI').AsCurrency
                                                                           - FieldByName('YONGYEUK').AsCurrency);
  end;
end;

procedure TXForm1.sbtn_other_computeClick(Sender: TObject);
begin
  //합계계산버튼
  Compute_Sum_sub;
 //종량제 관련 합산.
// 나현찬 협회 시작 
   if tbl0.FieldByName('ChargeGubun').AsString = 'V' then
  begin
    Sum_VolumeChargeFromObject;
  end
  else Clear_VolumeCharge;
// 나현찬 협회 끝 
end;

procedure TXForm1.btn_backwardClick(Sender: TObject);
begin
  Compute_backward;
end;

procedure TXForm1.memo_Total_price;
begin
  if not (tbl0.state in [dsInsert, dsEdit]) then
    tbl0.Edit;

  tbl0.FieldByName('area1').AsString  := '';

  memo_10_Price;
  memo_15_Price;
  
//  tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
//    GetSusuText(tbl_gam_info.fieldByName('price').AsCurrency,tbl_gam_info.fieldByName('SUSU').AsCurrency);
end;

procedure TXForm1.memo_10_Price;
var
  is_Auction             : String;  //경매건 여부
  Commission_receiptdate : String;  //경매적용을 위한 접수일자변수
  Commission_APT         : String;  //경매적용을 위한 아파트여부변수
begin
  tbl0.FieldByName('area2').AsString  := '';

  if tbl_gam_info.FieldByName('price0').AsCurrency < 1 then // 평가액이 0라면
    Exit;

  if not (tbl0.state in [dsInsert, dsEdit]) then
    tbl0.Edit;

  if tbl_gam_info.FieldByName('price1').AsCurrency > 0 then  // 1.0과 1.5가 혼용되어 있다면
  begin
    if gs_yn.ItemIndex = 0 then   // 기준금액이 감정평가액이라면
    begin
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+
          tbl_gam_info.fieldByName('Price1').AsCurrency,
          tbl_gam_info.fieldByName('Price0').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text) );

      tbl0.FieldByName('area2').AsString  :=
        GetSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price0').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text));
    end
    else begin                    // 기준금액이 개별지가액이라면
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price0_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text));

      tbl0.FieldByName('area2').AsString  :=
        GetSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price0_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text));
    end;
  end
  else begin
    if cmb_susuj.ItemIndex = 1 then
      is_Auction := 'Yes'
    else
      is_Auction := 'No';

    Commission_receiptdate := Trim(tbl_gam_info.FieldByName('receiptdate').AsString);
    Commission_receiptdate := User_Remove_char(Commission_receiptdate, '-');
    if Length(Commission_receiptdate) <> 8 then
      Commission_receiptdate := '-';

    Commission_APT := 'No';
    if (Trim(tbl_gam_info.FieldByName('category').AsString) = '아파트' ) then
      Commission_APT := 'Yes';

    if gs_yn.ItemIndex = 0 then   // 기준금액이 감정평가액이라면
    begin
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+
          tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price0').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
          ,is_Auction, Commission_receiptdate, Commission_APT);

      tbl0.FieldByName('area2').AsString  :=
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price0').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
        ,is_Auction, Commission_receiptdate, Commission_APT);
    end
    else begin                    // 기준금액이 개별지가액이라면
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+
          tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price0_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
          ,is_Auction, Commission_receiptdate, Commission_APT);

      tbl0.FieldByName('area2').AsString  :=
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price0_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price10').AsCurrency, '10', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
        ,is_Auction, Commission_receiptdate, Commission_APT);
    end;
  end;
end;

procedure TXForm1.memo_15_Price;
var
  is_Auction             : String;  //경매건 여부
  Commission_receiptdate : String;  //경매적용을 위한 접수일자변수
  Commission_APT         : String;  //경매적용을 위한 아파트여부변수
begin
  tbl0.FieldByName('area3').AsString  := '';

  if (tbl_gam_info.FieldByName('price1').AsCurrency < 1) and  (tbl_gam_info.FieldByName('price1_1').AsCurrency < 1)  then // 평가액이 0라면
    Exit;

  if not (tbl0.state in [dsInsert, dsEdit]) then
    tbl0.Edit;

  if tbl_gam_info.FieldByName('price0').AsCurrency > 0 then   // 1.0과 1.5가 혼용되어 있다면
  begin
    if gs_yn.ItemIndex = 0 then   // 기준금액이 감정평가액이라면
    begin
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+
          tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text));

      tbl0.FieldByName('area3').AsString  :=
        GetSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text));
    end
    else begin                   // 기준금액이 개별지가액이라면
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text));

      tbl0.FieldByName('area3').AsString  :=
        GetSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text));
    end;
  end
  else begin
    if cmb_susuj.ItemIndex = 1 then
      is_Auction := 'Yes'
    else
      is_Auction := 'No';

    Commission_receiptdate := Trim(tbl_gam_info.FieldByName('receiptdate').AsString);
    Commission_receiptdate := User_Remove_char(Commission_receiptdate, '-');
    if Length(Commission_receiptdate) <> 8 then
      Commission_receiptdate := '-';

    Commission_APT := 'No';
    if (Trim(tbl_gam_info.FieldByName('category').AsString) = '아파트' ) then
      Commission_APT := 'Yes';

    if gs_yn.ItemIndex = 0 then   // 기준금액이 감정평가액이라면
    begin
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
        ,is_Auction, Commission_receiptdate, Commission_APT);

      tbl0.FieldByName('area3').AsString  :=
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0').AsCurrency+tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
        ,is_Auction, Commission_receiptdate, Commission_APT);
    end
    else begin                   // 기준금액이 개별지가액이라면
      tbl0.FieldByName('area1').AsString  :=  tbl0.FieldByName('area1').AsString +#13+
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
        ,is_Auction, Commission_receiptdate, Commission_APT);

      tbl0.FieldByName('area3').AsString  :=
        GetSingleSusuText(tbl_gam_info.fieldByName('Price0_1').AsCurrency+tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price1_1').AsCurrency,tbl_gam_info.fieldByName('Price00').AsCurrency,tbl_gam_info.fieldByName('Price15').AsCurrency, '15', strtofloat(edit_rate.Text), strtofloat(edit_DC.Text)
        ,is_Auction, Commission_receiptdate, Commission_APT);
    end;
  end;
end;

procedure TXForm1.cxButton6Click(Sender: TObject);
begin
  memo_Total_price;
end;

procedure TXForm1.cxButton7Click(Sender: TObject);
begin
  memo_10_Price;
end;

procedure TXForm1.cxButton8Click(Sender: TObject);
begin
  memo_15_Price;
end;

procedure TXForm1.f_MULJOSABI_countPropertiesEditValueChanged( Sender: TObject);
begin
  if not (tbl_gam_info.state in [dsInsert, dsEdit]) then
    tbl_gam_info.Edit;

  if IsNumberOnly(f_MULJOSABI_count.Text) then begin
    tbl_gam_info.FieldByName('MULJOSABI').AsCurrency := 3000 * StrtoInt(f_MULJOSABI_count.Text);
  end;
end;

procedure TXForm1.cxButton1Click(Sender: TObject);
begin
  if not (tbl_gam_info.state in [dsInsert, dsEdit]) then
    tbl_gam_info.Edit;

  OpenAcount;
end;

procedure TXForm1.cmb_susujPropertiesChange(Sender: TObject);
begin
  chk_Mode;
  Compute_susu;
  DomakeParam;
end;

procedure TXForm1.radio_ModePropertiesChange(Sender: TObject);
begin
  chk_Mode;
  DomakeParam;

  if Not (tbl0.state in [dsInsert, dsEdit]) then
    tbl0.Edit;

  if subprint_yn.ItemIndex = 0 then
    tbl0.FieldByName('Chk_prn_detail').AsBoolean := True
  else
    tbl0.FieldByName('Chk_prn_detail').AsBoolean := False;
end;

procedure TXForm1.f_TOJOSABI_countPropertiesEditValueChanged(
  Sender: TObject);
begin
  if not (tbl_gam_info.state in [dsInsert, dsEdit]) then
    tbl_gam_info.Edit;

  if IsNumberOnly(f_TOJOSABI_count.Text) then begin
    tbl_gam_info.FieldByName('TOJOSABI').AsCurrency := 15000 * StrtoInt(f_TOJOSABI_count.Text);
  end;
end;

procedure TXForm1.cxLabel21Click(Sender: TObject);
begin
  if not (tbl0.state in [dsInsert, dsEdit]) then
    tbl0.Edit;

  if ( cxLabel21.Caption = '절 사 금 액 [자동]' ) then
  begin
    tbl0.FieldByName('Chk_His').AsString := '0';
    cxLabel21.Caption := '절 사 금 액 [수동]';
  end
  else begin
    tbl0.FieldByName('Chk_His').AsString := '1';
    cxLabel21.Caption := '절 사 금 액 [자동]';
//    f_price0Exit(Sender);
  end;
end;

procedure TXForm1.Field_AlterProc(gTableNme, Str_Field: string);
begin
  with Qryexec do begin
    Close;
    SQL.Clear;
    SQL.Text := 'ALTER TABLE  ' + gTableNme + ' ADD (' + Str_Field + ' )';
    ExecSQL;
    Close;
  end;
end;

procedure TXForm1.f_Price10Exit(Sender: TObject);
begin
  // EditExit
  if Chk_Sale_chk.Checked then
  begin
    try
      if not (tbl_gam_info.state in [dsInsert, dsEdit]) then
        tbl_gam_info.Edit;

      tbl_gam_info.FieldByName('SUSU').AsCurrency   := Trunc(tbl_gam_info.FieldByName('Price10').AsCurrency +
          tbl_gam_info.FieldByName('Price15').AsCurrency + tbl_gam_info.FieldByName('Price20').AsCurrency);
    except
      ;
    end;
  end;

  Compute_susu;
end;

procedure TXForm1.cmb_susujClick(Sender: TObject);
begin
  chk_Mode;
end;

procedure TXForm1.RzBitBtn5Click(Sender: TObject);
begin
  Hint_Panel.Left := 98;
  Hint_Panel.Top := 115;
  Hint_Panel.Visible := not Hint_Panel.Visible;
end;

procedure TXForm1.Chk_Sale_chkClick(Sender: TObject);
begin
  if ( Chk_Sale_chk.Checked and (radio_Mode.ItemIndex = 0) ) then
  begin
    Application.MessageBox(pchar('집계옵션이 자동일때는 수수료를 수기입력하실 수 없습니다.' + #13 + '집계옵션을 수동으로 선택하시고 다시 시도하세요.'), '정보', MB_OK);
    Chk_Sale_chk.Checked := False;
  end;
end;

procedure TXForm1.cxLabel19Click(Sender: TObject);
begin
  if not (tbl0.state in [dsInsert, dsEdit]) then
    tbl0.Edit;

  if ( cxLabel19.Caption = '부가 가치세 [자동]' ) then
  begin
    tbl0.FieldByName('Chk_Tax').AsString := '0';
    cxLabel19.Caption := '부가 가치세 [수동]';
  end
  else begin
    tbl0.FieldByName('Chk_Tax').AsString := '1';
    cxLabel19.Caption := '부가 가치세 [자동]';
//    f_price0Exit(Sender);
  end;
end;

procedure TXForm1.cxLabel35Click(Sender: TObject);
begin
  if cmb_susuj.ItemIndex = 1 then
    begin
    Application.MessageBox(pchar('경매물건에 대해서는 적용요율을 변경하실수 없습니다.'), '정보', MB_OK);
    exit;
    end;


  if Not(tbl0.State in [dsEdit, dsInsert]) then
    tbl0.Edit;
  tbl0.FieldByName('SusuRate').AsString := '0.9';
end;

procedure TXForm1.cxLabel36Click(Sender: TObject);
begin
  //// 나 현찬 추가
{   if (userinfo.Office = '10') and (copy(tbl_gam_info.FieldByName(
    'doc_id').AsString,9,1) <> '2' )  then
    begin
      Application.MessageBox(pchar('변경하실수 없습니다. 경리팀에 문의하세요.'), '정보', MB_OK);
    exit;
    end;

   }

  if Not(tbl0.State in [dsEdit, dsInsert]) then
    tbl0.Edit;
  tbl0.FieldByName('SusuRate').AsString := '1.0';
end;

procedure TXForm1.cxLabel39Click(Sender: TObject);
begin
  if cmb_susuj.ItemIndex = 1 then
    begin
    Application.MessageBox(pchar('경매물건에 대해서는 적용요율을 변경하실수 없습니다.'), '정보', MB_OK);
    exit;
    end;

  if Not(tbl0.State in [dsEdit, dsInsert]) then
    tbl0.Edit;
  tbl0.FieldByName('SusuRate').AsString := '1.1';
end;

procedure TXForm1.edit_DCExit(Sender: TObject);
var
  TRate : Real;
  begin
  Try
    TRate := strtofloat(edit_DC.text);
  Except
    Application.MessageBox(pchar('할인할증률의 입력이 잘못되었습니다.'), '정보', MB_OK);
    edit_DC.SetFocus;
  End;

   //// 나 현찬 추가
  {if (userinfo.Office = '10') and (copy(tbl_gam_info.FieldByName('doc_id').AsString,9,1) <> '2' ) and  (edit_dc.Text <> '1.0')  then
    begin
      Application.MessageBox(pchar('변경하실수 없습니다. 경리팀에 문의하세요.'), '정보', MB_OK);
      edit_dc.Text := '1.0' ;

      exit;
    end;
     }

  end;

procedure TXForm1.cxLabel9Click(Sender: TObject);
begin
 //나현찬 주석  Screen.Cursor := crHourGlass;
//나현찬 주석   try
  //착수금 갱신하기
 {나현찬 주석   DepositQry.Close;
    DepositQry.QueryService := 'AlMighty';
    DepositQry.FieldDefs.Clear;
    DepositQry.Query.Text := 'Exec SP_S_APW_MasterEx 1,:docid';
    DepositQry.ParamByName['docid'].AsString := tbl_gam_info.FieldByName('doc_id').AsString;
    DepositQry.Open; }

 { DepositQry.Close;

  DepositQry.ParamByName['docid'].AsString := tbl_gam_info.FieldByName('doc_id').AsString;
  DepositQry.Open;
                   }
 {나현찬 주석  if Not(tbl_gam_info.State in [dsEdit, dsInsert]) then
    tbl_gam_info.Edit;
  tbl_gam_info.FieldByName('DEPOSIT').AsInteger := StrToIntDef(DepositQry.FieldByName('선수금').AsString,0);
  except
  end;
  Compute_Sum_sub;

  Screen.Cursor := crArrow; }
end;

procedure TXForm1.CheckBox1Click(Sender: TObject);
begin
  if  CheckBox1.Checked then begin
      bCheck := true;
  end else begin
      bCheck := false;
  end;
end;






procedure TXForm1.susu8Click(Sender: TObject);
begin
 if cmb_susuj.ItemIndex = 1 then
    begin
    Application.MessageBox(pchar('경매물건에 대해서는 적용요율을 변경하실수 없습니다.'), '정보', MB_OK);
    exit;
    end;


  if Not(tbl0.State in [dsEdit, dsInsert]) then
    tbl0.Edit;
  tbl0.FieldByName('SusuRate').AsString := '0.8';
end;

procedure TXForm1.susu12Click(Sender: TObject);
begin
  if cmb_susuj.ItemIndex = 1 then
    begin
    Application.MessageBox(pchar('경매물건에 대해서는 적용요율을 변경하실수 없습니다.'), '정보', MB_OK);
    exit;
    end;

  if Not(tbl0.State in [dsEdit, dsInsert]) then
    tbl0.Edit;
  tbl0.FieldByName('SusuRate').AsString := '1.2';
end;

procedure TXForm1.rdbChargeGubunClick(Sender: TObject);
begin
 ///2012.09.27 변경. 시작...
  if not FBolCompensation then
  begin
    ShowMessage('보상 건이 아닌 경우 선택하실 필요가 없습니다.');
    Clear_VolumeCharge;
    tbl0.FieldByName('ChargeGubun').AsString := '';
  end;
  ///2012.09.27 변경. 끝....
  ///2012-09-13 종량제 자동계산 추가.시작.
  btn_totalClick(nil);
  ///2012-09-13 종량제 자동계산 추가.끝.
  pnlVolume.Visible := (rdbChargeGubun.ItemIndex = 0);
end;

///2012-09-13 종량제 프로시져 변경. 시작.

procedure TXForm1.Compute_VolumeCharge;
var //토지건물평가금액//토지종량할인금액//수목종량할인금액
  curOnlyPrice, curLandBuild, curDiscountLand, curDiscountTree: Currency;
  strMemo: string;
begin
  with tbl0 do begin
    if not (state in [dsInsert, dsEdit]) then
      Edit;

    /// 종가 70% 로직 시작 -----------------
    //토지건물평가금액
    curLandBuild := 0;
    curLandBuild := FieldByName('LandPrice').AsCurrency
      + FieldByName('BuildPrice').AsCurrency;
 //영업권 외 평가금액
    ///2012.09.17 설명. price는 이미 gs_yn 구분에 따라 들어온 금액입니다.
    curOnlyPrice := tbl_gam_info.FieldByName('Price').AsCurrency -
      tbl_gam_info.FieldByName('Price2').AsCurrency;
    //토지건물 외 종가 수수료 100% = ( 전체수수료 * 기타(토지건물외)평가금액의 비율 ) + 영업권수수료
    ///2012.09.17. 변경.Price00은. 1.0/1.5수수료 계산 이전 순수수수료 이므로 susu-영업수수료로 변경-----시작
    if curOnlyPrice > 0 then
    begin
        FieldByName('ChargeRest').AsCurrency := Trunc(
        (tbl_gam_info.FieldByName('SUSU').AsCurrency - tbl_gam_info.FieldByName('price20').AsCurrency) //Price00 빼고 변경.
        * ((curOnlyPrice - curLandBuild) / curOnlyPrice
        ))
        + tbl_gam_info.FieldByName('Price20').AsCurrency;
      //적요.
       FieldByName('area13').AsString :=
        FormatCurr('#,##', (tbl_gam_info.FieldByName('SUSU').AsCurrency - tbl_gam_info.FieldByName('price20').AsCurrency)) ////Price00 빼고 변경.
        + '*((' + FormatCurr('#,##', curOnlyPrice)
        + '-' + FormatCurr('#,##', curLandBuild) + ')/' + FormatCurr('#,##', curOnlyPrice)
        + ')' +
        '+' + FormatCurr('#,##', tbl_gam_info.FieldByName('Price20').AsCurrency)
        + #13 + '≒' + FormatCurr('#,##', FieldByName('ChargeRest').AsCurrency);
    //토지건물종가수수료(70%) = 수수료(영업권제외) * (토지건물평가금액/평가금액) * 0.7
      FieldByName('ChargePartial').AsCurrency :=
        Trunc((tbl_gam_info.FieldByName('SUSU').AsCurrency - tbl_gam_info.FieldByName('price20').AsCurrency) //Price00 빼고 변경.
        * (curLandBuild / curOnlyPrice)
        * 0.7);
   //토지건물종가수수료(70%) 적요
      FieldByName('area9').AsString := FormatCurr('#,##',
        (tbl_gam_info.FieldByName('SUSU').AsCurrency - tbl_gam_info.FieldByName('price20').AsCurrency)) //Price00 빼고 변경.
        + 'x' + '(' + FormatCurr('#,##', curLandBuild) + '/' + FormatCurr('#,##', curOnlyPrice) + ')'
        + 'x' + ' 0.7 '
        + #13 + '≒' + FormatCurr('#,##', FieldByName('ChargePartial').AsCurrency);
    end;
     /// 종가 70% 로직 끝. -----------------
    ///2012.09.17. 변경.Price00은. 1.0/1.5수수료 계산 이전 순수수수료 이므로 susu-영업수수료로 변경-----시작

    /// 종량 수수로 계산 시작..-----------------
    //토지 종량 할인 로직
    curDiscountLand :=
      Discount_VolumeLandCharge(FieldByName('LandVolumeCharge_Origin').AsCurrency,
      tbl_gam_info.FieldByName('PHILJI').AsInteger);
    //토지 기본수수료 로직 추가.
    if tbl_gam_info.FieldByName('PHILJI').AsInteger > 0 then
      FieldByName('LandVolumeCharge').AsCurrency := 100000 +
        FieldByName('LandVolumeCharge_Origin').AsCurrency - curDiscountLand
    else FieldByName('LandVolumeCharge').AsCurrency := 0;

    //건물 기본수수료 로직추가.
    if tbl_gam_info.FieldByName('MULGUNSU').AsInteger > 0 then
      FieldByName('BuildVolumeCharge').AsCurrency := 30000 +
        FieldByName('BuildVolumeCharge').AsCurrency
    else FieldByName('BuildVolumeCharge').AsCurrency := 0;
    //수목 종량 할인 로직
    curDiscountTree :=
      Discount_VolumeTreeCharge(FieldByName('TreeVolumeCharge_Origin').AsCurrency,
      FieldByName('TreeCnt').AsInteger);
    //수목 기본수수료 로직 추가.
    if FieldByName('TreeCnt').AsInteger > 0 then
      FieldByName('TreeVolumeCharge').AsCurrency := 1000 +
        FieldByName('TreeVolumeCharge_Origin').AsCurrency
        - curDiscountTree
    else FieldByName('TreeVolumeCharge').AsCurrency := 0;
    //구축물 기본수수료 로직 추가. ///2012.09.27 기본수수료 오타 15000 ->1500 
    if FieldByName('StructureVolumeCharge').AsCurrency > 0 then
      FieldByName('StructureVolumeCharge').AsCurrency := 1500 + FieldByName('StructureVolumeCharge').AsCurrency;


    //종량 합
    FieldByName('VolumeCharge').AsCurrency :=
      FieldByName('LandVolumeCharge').AsCurrency
      + FieldByName('BuildVolumeCharge').AsCurrency
      + FieldByName('TreeVolumeCharge').AsCurrency
      + FieldByName('MoveFeeVolumeCharge').AsCurrency
      + FieldByName('StructureVolumeCharge').AsCurrency
      + FieldByName('BusinessVolumeCharge').AsCurrency;
    //종량 30%
    FieldByName('VolumeChargePartial').AsCurrency :=
      Trunc((FieldByName('LandVolumeCharge').AsCurrency
      + FieldByName('BuildVolumeCharge').AsCurrency) * 0.3);
    //종량 30% 적요
    if FieldByName('VolumeChargePartial').AsCurrency = 0 then
      FieldByName('area12').AsString := ''
    else
      FieldByName('area12').AsString := '(' + FormatCurr('#,##',
        FieldByName('LandVolumeCharge').AsCurrency)
        + '+' + FormatCurr('#,##', FieldByName('BuildVolumeCharge').AsCurrency) +
        ')* 0.3'
        + #13 + '≒' + FormatCurr('#,##', FieldByName('VolumeChargePartial').AsCurrency);

    //토지 조사비
    FieldByName('ResearchLandVolumeCharge').AsCurrency := 10000 * tbl_gam_info.FieldByName('PHILJI').AsCurrency;
    //토지 조사비 적요
    if FieldByName('ResearchLandVolumeCharge').AsCurrency > 0 then
      FieldByName('area14').AsString := '10,000*' + FormatCurr('#,##', tbl_gam_info.FieldByName('PHILJI').AsCurrency)
        + #13 + '=' + FormatCurr('#,##', FieldByName('ResearchLandVolumeCharge').AsCurrency)
    else FieldByName('area14').AsString := '';
    //건물 조사비
    FieldByName('ResearchBuildVolumeCharge').AsCurrency := 3000 * tbl_gam_info.FieldByName('MULGUNSU').AsCurrency;
    //건물 조사비 적요
    if FieldByName('ResearchBuildVolumeCharge').AsCurrency > 0 then
      FieldByName('area16').AsString := '3,000*' + FormatCurr('#,##', tbl_gam_info.FieldByName('MULGUNSU').AsCurrency)
        + #13 + '=' + FormatCurr('#,##', FieldByName('ResearchBuildVolumeCharge').AsCurrency)
    else FieldByName('area16').AsString := '';

    //수수료 합 = 종가/종량 혼합 수수료 + 실비
    FieldByName('MixCharge').AsCurrency :=
      FieldByName('ChargePartial').AsCurrency
      + FieldByName('VolumeChargePartial').AsCurrency
      + FieldByName('ChargeRest').AsCurrency
      + FieldByName('ResearchLandVolumeCharge').AsCurrency
      + FieldByName('ResearchBuildVolumeCharge').AsCurrency
      + tbl_gam_info.FieldByName('YEBI').AsCurrency
      + tbl_gam_info.FieldByName('GONGBU').AsCurrency
      + tbl_gam_info.FieldByName('SILBI').AsCurrency
      + tbl_gam_info.FieldByName('YONGYEUK').AsCurrency;

    //절사//부가가치세//총계
    FieldByName('MixChargeJELSA').AsCurrency := FieldByName('MixCharge').AsCurrency -
      Trunc(FieldByName('MixCharge').AsCurrency / 1000) * 1000;
    FieldByName('MixCharge').AsCurrency := FieldByName('MixCharge').AsCurrency -
      FieldByName('MixChargeJELSA').AsCurrency;
    FieldByName('MixChargeTAX').AsCurrency := Trunc(FieldByName('MixCharge').AsCurrency * 0.1);
    FieldByName('MixChargeTOTAL').AsCurrency := FieldByName('MixCharge').AsCurrency +
      FieldByName('MixChargeTAX').AsCurrency;
    //절사//부가가치세//총계 적요.
    strMemo := FormatCurr('#,##', FieldByName('ChargePartial').AsCurrency);
    if FieldByName('VolumeChargePartial').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##', FieldByName('VolumeChargePartial').AsCurrency);
    if FieldByName('ChargeRest').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##', FieldByName('ChargeRest').AsCurrency);
    if FieldByName('ResearchLandVolumeCharge').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##',
        FieldByName('ResearchLandVolumeCharge').AsCurrency);
    if FieldByName('ResearchBuildVolumeCharge').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##',
        FieldByName('ResearchBuildVolumeCharge').AsCurrency);
///2012.10.08 적요에만 여비가 빠져서 처리함. 시작
    if tbl_gam_info.FieldByName('YEBI').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##', tbl_gam_info.FieldByName('YEBI').AsCurrency);
///2012.10.08 적요에만 여비가 빠져서 처리함. 끝.
    if tbl_gam_info.FieldByName('GONGBU').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##', tbl_gam_info.FieldByName('GONGBU').AsCurrency);
    if tbl_gam_info.FieldByName('SILBI').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##', tbl_gam_info.FieldByName('SILBI').AsCurrency);
    if tbl_gam_info.FieldByName('YONGYEUK').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##',
        tbl_gam_info.FieldByName('YONGYEUK').AsCurrency);
    if FieldByName('MixChargeJELSA').AsCurrency > 0 then
      strMemo := strMemo + '-' + FormatCurr('#,##', FieldByName('MixChargeJELSA').AsCurrency);
    if FieldByName('MixChargeTAX').AsCurrency > 0 then
      strMemo := strMemo + '+' + FormatCurr('#,##', FieldByName('MixChargeTAX').AsCurrency);
    if FieldByName('MixChargeTOTAL').AsCurrency > 0 then
      FieldByName('area15').AsString := strMemo
        + #13 + '=' + FormatCurr('#,##', FieldByName('MixChargeTOTAL').AsCurrency)
    else FieldByName('area15').AsString := '';
  end;

end;
///2012-09-13 종량제 프로시져 변경. 끝.


function TXForm1.Discount_VolumeLandCharge(LandVolume: Currency;
  LancCnt: Integer): Currency;
var
  curLandCharge, curDiscountPrice: Currency; //토지 총 수수료 //할인금액
  intLandCount, intRestCount: Integer; //토지 수//남은 토지수
  strFifth, strFourth, strThird, strSecond, strMemo: string;
begin
  curLandCharge := 0;
  curDiscountPrice := 0;
  intLandCount := LancCnt; //tbl_gam_info.FieldByName('PHILJI').AsInteger;
  intRestCount := intLandCount;
  tbl0.FieldByName('area10').AsString := FormatCurr('#,##', LandVolume);
  strFifth := '';
  strFourth := '';
  strThird := '';
  strSecond := '';
  Result := 0;
  ///2012-09-13 종량제 변경. 초기값세팅.
  tbl0.FieldByName('area10').AsString := '';

  ///2012-09-13 종량제 변경.: 할인금액 없는 토지 적요.
  if LandVolume > 0 then
    tbl0.FieldByName('area10').AsString := '100,000' + FormatCurr('#,##', LandVolume)
      + #13 + '=' + FormatCurr('#,##', 100000 + LandVolume);

  if intLandCount < 21 then
    exit; //할인금액 없음.

  curLandCharge := LandVolume; //tbl0.FieldByName('LandVolumeCharge_origin').AsCurrency;

  if intRestCount > 500 then begin // 마.501필지부터
    curDiscountPrice := curDiscountPrice
      + (curLandCharge * ((intRestCount - 500) / intLandCount) * 0.4);
    strFifth := IntToStr((intRestCount - 500)) + '/' + IntToStr(intLandCount) + '* 0.4';
    intRestCount := 500;
  end;
  if intRestCount > 250 then begin // 라.251필지부터
    curDiscountPrice := curDiscountPrice
      + (curLandCharge * ((intRestCount - 250) / intLandCount) * 0.3);
    strFourth := IntToStr((intRestCount - 250)) + '/' + IntToStr(intLandCount) + '* 0.3';
    intRestCount := 250;
  end;
  if intRestCount > 150 then begin // 다.151필지부터
    curDiscountPrice := curDiscountPrice
      + (curLandCharge * ((intRestCount - 150) / intLandCount) * 0.2);
    strThird := IntToStr((intRestCount - 150)) + '/' + IntToStr(intLandCount) + '* 0.2';
    intRestCount := 150;
  end;
  if intRestCount > 20 then begin // 나.21필지부터
    curDiscountPrice := curDiscountPrice
      + (curLandCharge * ((intRestCount - 20) / intLandCount) * 0.1);
    strSecond := IntToStr((intRestCount - 20)) + '/' + IntToStr(intLandCount) + '* 0.1';
    intRestCount := 20;
  end;

  strMemo := strSecond;
  if strThird <> '' then strMemo := strMemo + '+' + strThird;
  if strFourth <> '' then strMemo := strMemo + '+' + strFourth;
  if strFifth <> '' then strMemo := strMemo + '+' + strFifth;

  ///2012-09-13 종량제 변경.: 토지 적요.
  if LandVolume > 0 then
    tbl0.FieldByName('area10').AsString := '100,000' + FormatCurr('#,##', LandVolume)
      + '-' + FormatCurr('#,##', LandVolume) + '*(' + strMemo
      + ')' + #13 + '≒' + FormatCurr('#,##', 100000 + curLandCharge - Trunc(curDiscountPrice));

  //절사
  Result := Trunc(curDiscountPrice);

end;

function TXForm1.Discount_VolumeTreeCharge(const TreeVolume: Currency;
  const TreeCnt: Integer): Currency;
var
  curTreeCharge, curDiscountPrice: Currency; //토지 총 수수료 //할인금액
  intTreeCount, intRestCount: Integer; //토지 수//남은 토지수
  strFirst, strFourth, strThird, strSecond, strMemo: string;
begin
  curTreeCharge := 0;
  curDiscountPrice := 0;
  intTreeCount := TreeCnt;
  intRestCount := intTreeCount;
  tbl0.FieldByName('area11').AsString := FormatCurr('#,##', TreeVolume);
  strSecond := '';
  strFourth := '';
  strThird := '';
  strFirst := '';
  Result := 0;
  ///2012-09-13 종량제 초기화 추가.
  tbl0.FieldByName('area11').AsString := '';


  ///2012-09-13 종량제 : 할인금액 없는 토지 적요.
  if TreeVolume > 0 then
    tbl0.FieldByName('area10').AsString := '1,000' + FormatCurr('#,##', TreeVolume)
      + #13 + '=' + FormatCurr('#,##', 1000 + TreeVolume);

  if intTreeCount < 201 then
    exit; //할인금액 없음.

  curTreeCharge := TreeVolume;

  if intRestCount > 10000 then begin // 10000부터
    curDiscountPrice := curDiscountPrice
      + (curTreeCharge * ((intRestCount - 10000) / intTreeCount) * 0.4);
    strFourth := IntToStr((intRestCount - 10000)) + '/' + IntToStr(intTreeCount) + '* 0.4';
    intRestCount := 10000;
  end;
  if intRestCount > 5000 then begin // 5000부터
    curDiscountPrice := curDiscountPrice
      + (curTreeCharge * ((intRestCount - 5000) / intTreeCount) * 0.3);
    strThird := IntToStr((intRestCount - 5000)) + '/' + IntToStr(intTreeCount) + '* 0.3';
    intRestCount := 5000;
  end;
  if intRestCount > 500 then begin // 나.21필지부터
    curDiscountPrice := curDiscountPrice
      + (curTreeCharge * ((intRestCount - 500) / intTreeCount) * 0.2);
    strSecond := IntToStr((intRestCount - 500)) + '/' + IntToStr(intTreeCount) + '* 0.2';
    intRestCount := 500;
  end;
  if intRestCount > 200 then begin // 마.501필지부터
    curDiscountPrice := curDiscountPrice
      + (curTreeCharge * ((intRestCount - 200) / intTreeCount) * 0.1);
    strFirst := IntToStr((intRestCount - 200)) + '/' + IntToStr(intTreeCount) + '* 0.1';
    intRestCount := 200;
  end;

  strMemo := '';
  if strFirst <> '' then strMemo := strFirst;
  if strSecond <> '' then strMemo := strMemo + '+' + strSecond;
  if strThird <> '' then strMemo := strMemo + '+' + strThird;
  if strFourth <> '' then strMemo := strMemo + '+' + strFourth;

  ///2012-09-13 종량제 : 수목 적요.
  tbl0.FieldByName('area11').AsString := '1000+' + FormatCurr('#,##', TreeVolume)
    + '-' + FormatCurr('#,##', TreeVolume) + '*(' + strMemo
    + ')' + #13 + '≒' + FormatCurr('#,##', 1000 + curTreeCharge - Trunc(curDiscountPrice));
  //절사
  Result := Trunc(curDiscountPrice);

end;

 procedure TXForm1.btnVolumeAutoCalcClick(Sender: TObject);
begin
  if tbl0.FieldByName('ChargeGubun').AsString = 'V' then
  begin
     ///2012.09.27 변경.시작.
    Compute_susu;
    //기존 로직 위 compute_susu 에 다 포함되어있으므로  주석처리
    //Sum_VolumeChargeFromObject;
    //Compute_VolumeCharge;
    ///2012.09.27 변경.끝.
  end
  else Clear_VolumeCharge;
end;


procedure TXFORM1.Clear_VolumeCharge;
begin
  with tbl0 do
  begin
    if not Active then
      exit;
    if FieldByName('ChargeGubun').AsString = 'V' then
      exit;
    if not (State in [dsEdit, dsInsert]) then
      tbl0.Edit;

    FieldByName('VolumeCharge').AsCurrency := 0;
    FieldByName('LandVolumeCharge').AsCurrency := 0;
    FieldByName('LandVolumeCharge_Origin').AsCurrency := 0;
    FieldByName('BuildVolumeCharge').AsCurrency := 0;
    FieldByName('TreeVolumeCharge').AsCurrency := 0;
    FieldByName('TreeVolumeCharge_Origin').AsCurrency := 0;
    FieldByName('StructureVolumeCharge').AsCurrency := 0;
    FieldByName('BusinessVolumeCharge').AsCurrency := 0;
    FieldByName('MoveFeeVolumeCharge').AsCurrency := 0;
    FieldByName('ChargePartial').AsCurrency := 0;
    FieldByName('VolumeChargePartial').AsCurrency := 0;
    FieldByName('ChargeRest').AsCurrency := 0;
    FieldByName('ResearchLandVolumeCharge').AsCurrency := 0;
    FieldByName('ResearchBuildVolumeCharge').AsCurrency := 0;
    FieldByName('ResearchLandVolumeCharge').AsCurrency := 0;
    FieldByName('MixCharge').AsCurrency := 0;
    FieldByName('MixChargeJELSA').AsCurrency := 0;
    FieldByName('MixChargeTAX').AsCurrency := 0;
    FieldByName('MixChargeTOTAL').AsCurrency := 0;

    FieldByName('area10').AsString := '';
    FieldByName('area11').AsString := '';
    FieldByName('area12').AsString := '';
    FieldByName('area13').AsString := '';
    FieldByName('area14').AsString := '';
    FieldByName('area15').AsString := '';
    FieldByName('area16').AsString := '';
  end;
end;
procedure TXForm1.XFormShow(Sender: TObject);
var
  AKbmQuery: TkbmMWClientQuery;
begin
   // 나현찬 추가 경매일때
   // 담보인데 수수료 청구서 경매로 끌어와 진다.
if tbl_gam_info.FieldByName('purpose').AsString = '경매' then
  begin
   tbl0.Edit;
   tbl0.FieldByName('chk_dambo').Value := 1 ;
   tbl0.Post;
  end;

  ///2012.09.27 종량구분. gam_info있으면 가져옴. 시작....
  if (tbl0.Active) and (not (tbl0.state in [dsInsert, dsEdit])) then
    tbl0.Edit;

  if (tbl0.Active) and (tbl0.FindField('ChargeGubun') <> nil) //
    and (tbl_gam_info.Active) and (tbl_gam_info.FindField('ChargeGubun') <> nil) then
  begin
    tbl0.FieldByName('ChargeGubun').AsString := tbl_gam_info.FieldByName('ChargeGubun').AsString;
  end
  else
  begin ///2012-09-13 종량제 종량구분 서버에서 가져오기 로직 추가 시작
    ///통플 사용 법인은 조서쪽. IsVolumeCharge 로직과 동일하게. 법인 RDB로 바꿔 사용하세요. 이하는 KapaTMS용 로직입니다.
    AKbmQuery := TkbmMWClientQuery.Create(nil);
    try
      with AKbmQuery do begin
        if Active then close;
        TransportStreamFormat := cm.ApStreamFormat;
        SessionName := 'ApWorksClient';
        QueryService := 'AlMighty';
        QueryServiceVersion := '1.0';
        Query.Text := 'exec SP_S_APW_Bill :MASTERID';
        Params.ParamByName('MASTERID').AsInteger := tbl_gam_info.FieldByName('MASTERID').AsInteger;
        Open;

        if (FindField('ChargeGubun') <> nil) and (tbl0.Active) then
        begin
          if not (tbl0.state in [dsInsert, dsEdit]) then
            tbl0.Edit;
          tbl0.FieldByName('ChargeGubun').AsString := FieldByName('ChargeGubun').AsString;
        end;
      end;
    finally
      FreeAndNil(AKbmQuery);
    end;
  ///2012-09-13 종량제 종량구분 서버에서 가져오기 로직 추가 끝.
  end;
  ///2012.09.27 종량구분. gam_info있으면 가져옴. 끝.....

  pnlVolume.Visible := (rdbChargeGubun.ItemIndex = 0);

  ///2012.09.27 변경 component control 시작..
  rdbChargeGubun.Enabled := FBolCompensation;
  if (FBolCompensation) then tbl0.FieldByName('Chk_Auto').AsInteger := 0; //무조건자동으로setting
  if (FBolCompensation) then tbl0.FieldByName('Chk_Dambo').AsInteger := 0; //무조건담보로 setting
  cmb_susuj.Enabled := not FBolCompensation; // 분류 수정불가.
  //디자인에 txtLaw 라벨 추가해주세요.
  if (FBolCompensation) and (gs_yn.ItemIndex = 0) then
    txtLaw.Visible := true
  else txtLaw.Visible := false;
  ///2012.09.27 변경 component control . 끝.
end;


procedure TXForm1.Sum_VolumeChargeFromObject;
var
 //  aLocalQry: TEasyQuery;///2012.10.05 주석처리. 멤버변수FLocalQry: TEasyQuery;로 올림
  bolExistsLand, bolExistsBuild: Boolean;
//  strLandTableName, strBuildTableName: string; ///2012-09-13 종량제 변수 추가.///2012.10.05 주석처리. 양식중복추가 가능으로 변경.
  DongCnt, LandTreeCnt: Integer;
  LandBuildPrice, TreePrice, StructurePrice, MoveFeePrice, EtcPrice,
    LandBuildVolumeCharge, TreeVolumeCharge, StructureVolumeCharge, MoveFeeVolumeCharge, BusinessVolumeCharge: Currency;
 ///2012.09.27 변수 추가.
  APublic10Price, APublic15Price, A10Price, A15Price: Currency;
begin
///2012.10.05 주석처리. 양식중복추가 가능으로 변경.및 주석처리
//  strLandTableName := '';
//  strBuildTableName := '';

  bolExistsLand := false;
  bolExistsBuild := false;
  ///2012.10.05 주석처리. 멤버변수FLocalQry: TEasyQuery;로 올림 시작.
  ///aLocalQry := TEasyQuery.Create(nil);
  ///aLocalQry.DatabaseName := ChildDataBase.DatabaseName;
  ///aLocalQry.SessionName := ChildDataBase.SessionName;
  ///2012.10.05 주석처리. 멤버변수FLocalQry: TEasyQuery;로 올림 끝.
  try
     with (FLocalQry) do begin // aLocalQry ->FLocalQry///2012.10.05
      Close;
      Sql.Clear;
      Sql.Add('select bd.table_name, B.sd_dllname from Binder B, Binder_detail bd ');
      Sql.Add('where B.code=bd.code ');
      //Sql.Add('and B.sd_flag=' + '16');

      Open;

      ///2012-09-13 종량제 tablename은 변경되므로 dllname으로변경.시작.
      //두개 테이블 등록 못하도록 수정. 감정서 양식 추가할때. 참고. table추가했다하더라도. 처음것만 계산함.
      if Locate('table_name', 'pbs_land', [loPartialKey]) then
      begin
        bolExistsLand := true;   
//        strLandTableName := FieldByName('table_name').AsString; ///2012.10.05 주석처리. 양식중복추가 가능으로 변경.및 주석처리
      end;
      if Locate('table_name', 'pbs_good', [loPartialKey]) then
      begin
        bolExistsBuild := true;
    //        strBuildTableName := FieldByName('table_name').AsString;///2012.10.05 주석처리. 양식중복추가 가능으로 변경.및 주석처리
      end;
    end;
      ///2012-09-13 종량제 tablename은 변경되므로 dllname으로변경.끝.
  finally
 //    FreeAndNil(aLocalQry);///2012.10.05 주석처리. form close 로 이동.
  end;
  //  일단 나현찬 주석처리 담보인데 불가능합니다. 메시지 나옴 
   if (not bolExistsLand) and (not bolExistsBuild)  then

  begin
    ///2012-09-13 종량제 메세지 변경.시작.
    ShowMessage('토지,물건 조서 양식. 둘 다 없어 종량계산이 불가능합니다.');
    ///2012-09-13 종량제 메세지 변경.끝.
    Clear_VolumeCharge;
    Exit;
  end; 
 ///2012.09.27 종가 초기화
  tbl_gam_info.FieldByName('price0').AsCurrency := 0;
  tbl_gam_info.FieldByName('price1').AsCurrency := 0;
  tbl_gam_info.FieldByName('price0_1').AsCurrency := 0;
  tbl_gam_info.FieldByName('price1_1').AsCurrency := 0;
  tbl_gam_info.FieldByName('price').AsCurrency := 0;
  tbl_gam_info.FieldByName('price2').AsCurrency := 0;

  ///2012-09-13 종량제 dataset check 추가.시작.
  if (not tbl0.Active) or (not tbl_gam_info.Active) then
  begin
    ShowMessage('데이터셋이 활성화 되지 못해 계산이 불가능합니다.');
    exit;
  end;
  if not (tbl0.state in [dsInsert, dsEdit]) or not (tbl_gam_info.state in [dsInsert, dsEdit]) then
  begin
    tbl0.edit;
    tbl_gam_info.edit;
  end;
  ///2012-09-13 종량제 dataset check 추가.끝.

  if bolExistsBuild then
  begin
    LandBuildPrice := 0;
    LandBuildVolumeCharge := 0;
    LandTreeCnt := 0; DongCnt := 0;
    TreePrice := 0; StructurePrice := 0; MoveFeePrice := 0; EtcPrice := 0; TreeVolumeCharge := 0; StructureVolumeCharge := 0; MoveFeeVolumeCharge := 0; BusinessVolumeCharge := 0;
///2012.09.27 추가한 변수 기본값
    APublic10Price := 0; APublic15Price := 0; A10Price := 0; A15Price := 0;

    SumVolumeChargeForBuild(LandBuildPrice, LandBuildVolumeCharge, DongCnt, LandTreeCnt, TreePrice, StructurePrice, MoveFeePrice, EtcPrice, TreeVolumeCharge,
      StructureVolumeCharge, ///2012-09-13 종량제. 이전비 MoveFeeVolumeCharge 삭제.
      BusinessVolumeCharge, //strBuildTableName ,///2012.10.05 주석처리. 양식중복추가 가능으로 변경.및 주석처리
      ///2012.09.27 변수 추가.
      APublic10Price, A10Price, A15Price);

    /// 2012.09.27 종가평가금액 배분
    tbl_gam_info.FieldByName('price0').AsCurrency := tbl_gam_info.FieldByName('price0').AsCurrency + A10Price;
    tbl_gam_info.FieldByName('price1').AsCurrency := tbl_gam_info.FieldByName('price1').AsCurrency + A15Price;
    tbl_gam_info.FieldByName('price0_1').AsCurrency := tbl_gam_info.FieldByName('price0_1').AsCurrency + 0;
    tbl_gam_info.FieldByName('price1_1').AsCurrency := tbl_gam_info.FieldByName('price1_1').AsCurrency + 0;
    tbl_gam_info.FieldByName('price2').AsCurrency := APublic10Price; //영업권 합산금액

    //평가금액 배분.
    tbl0.FieldByName('BuildPrice').AsCurrency := LandBuildPrice;
    tbl_gam_info.FieldByName('MULGUNSU').AsInteger := DongCnt;
    tbl0.fieldByName('TreeCnt').AsInteger := LandTreeCnt;
    tbl0.FieldByName('TreePrice').AsCurrency := TreePrice;
    tbl0.FieldByName('StructurePrice').AsCurrency := StructurePrice;
    tbl0.FieldByName('MoveFeePrice').AsCurrency := MoveFeePrice;
    tbl0.FieldByName('EtcPrice').AsCurrency := EtcPrice;
    //수수료 계산.
    tbl0.FieldByName('BuildVolumeCharge').AsCurrency := LandBuildVolumeCharge;
    tbl0.FieldByName('TreeVolumeCharge_Origin').AsCurrency := TreeVolumeCharge;
    tbl0.FieldByName('StructureVolumeCharge').AsCurrency := StructureVolumeCharge;
    tbl0.FieldByName('MoveFeeVolumeCharge').AsCurrency := MoveFeePrice * 0.01;
    tbl0.FieldByName('BusinessVolumeCharge').AsCurrency := BusinessVolumeCharge;
  end;

  if bolExistsLand then
  begin
    LandBuildPrice := 0;
    LandBuildVolumeCharge := 0;
    LandTreeCnt := 0;
 //2012.09.27 변수초기화 추가.
    APublic10Price := 0; APublic15Price := 0; A10Price := 0; A15Price := 0;

    SumVolumeChargeForLand(LandBuildPrice, LandBuildVolumeCharge, LandTreeCnt, //strLandTableName,///2012.10.05 주석처리. 양식중복추가 가능으로 변경.및 주석처리
      APublic10Price, APublic15Price, A10Price, A15Price); //변수추가.

    /// 2012.09.27 종가평가금액 배분
    tbl_gam_info.FieldByName('price0').AsCurrency := tbl_gam_info.FieldByName('price0').AsCurrency + A10Price;
    tbl_gam_info.FieldByName('price1').AsCurrency := tbl_gam_info.FieldByName('price1').AsCurrency + A15Price;
    tbl_gam_info.FieldByName('price0_1').AsCurrency := tbl_gam_info.FieldByName('price0_1').AsCurrency + APublic10Price;
    tbl_gam_info.FieldByName('price1_1').AsCurrency := tbl_gam_info.FieldByName('price1_1').AsCurrency + APublic15Price;

    //토지평가금액
    tbl0.fieldByName('LandPrice').AsCurrency := LandBuildPrice;
    tbl_gam_info.FieldByName('PHILJI').AsInteger := LandTreeCnt;
    //종량 수수료 계산.
    tbl0.FieldByName('LandVolumeCharge_Origin').AsCurrency := LandBuildVolumeCharge;
  end;
  //보상은 평가금액에..개별지가. 혹은 평가금액의 50%를 넣어주기 때문에. SumVolumeChargeForLand 참고.
  tbl_gam_info.FieldByName('price').AsCurrency := tbl_gam_info.FieldByName('price0').AsCurrency + tbl_gam_info.FieldByName('price1').AsCurrency;
end;

//2012.10.05 이하 프로시져 전반적으로 수정.

procedure TXForm1.SumVolumeChargeForBuild(var BuildPrice,
  BuildVolumeCharge: Currency; var DongCnt, TreeCnt: Integer;
  var TreePrice, StructurePrice, MoveFeePrice, EtcPrice, TreeVolumeCharge,
  StructureVolumeCharge, BusinessVolumeCharge: Currency;
  ///2012.10.05 주석처리 const ATableName: string;
  var APublic10Price, A10Price, A15Price: Currency);
var aLocalQry: TEasyQuery;
  PriceField_Value, VolumeField_Value: string;
begin
  ///2012.10.05 다수개의 조서에서 종가 sum 해오기.
  try
    aLocalQry := TEasyQuery.Create(nil);
    aLocalQry.DatabaseName := ChildDataBase.DatabaseName;
    aLocalQry.SessionName := ChildDataBase.SessionName;
    FLocalQry.first;
    while not FLocalQry.Eof do
    begin
      if pos('pbs_good', FLocalQry.FieldByName('table_name').AsString) > 0 then //pbs_land
      begin
        with (aLocalQry) do
        begin
          Close;
          Sql.Clear;
          Sql.add('Select * from ' + FLocalQry.FieldByName('table_name').AsString);
          Open;
          First;
          while not eof do
          begin
            PriceField_Value := fieldByName('Price').AsString;
            if (UpperCase(fieldByName('Gubun').AsString) = 'D') and (PriceField_Value <> emptyStr) and (IsNumberOnly(PriceField_Value)) then
            begin
            //종가 평가금액 배분 : 로컬edb 파일에서 sum
              if FieldByName('tradeYN').AsString = 'Y' then //영업권일때. 영업권끼리 더하기.
                APublic10Price := APublic10Price + Str2Currency(PriceField_Value)
              else begin
                if FieldByName('RATIO').AsString = 'Y' then
                  A15Price := A15Price + Str2Currency(PriceField_Value)
                else A10Price := A10Price + Str2Currency(PriceField_Value);
              end;
              if (fieldByName('objgubun').AsString = '건물') then
              begin
                BuildPrice := BuildPrice + Str2Currency(PriceField_Value);
              end
              else if (fieldByName('objgubun').AsString = '수목') then
              begin
                TreePrice := TreePrice + Str2Currency(PriceField_Value);
              end
              else if (fieldByName('objgubun').AsString = '이전비') then
              begin
                MoveFeePrice := MoveFeePrice + Str2Currency(PriceField_Value);
              end
              else if (fieldByName('objgubun').AsString = '구축물') then
              begin
                StructurePrice := StructurePrice + Str2Currency(PriceField_Value);
              end
              else //기타//지장물
                EtcPrice := EtcPrice + Str2Currency(PriceField_Value);
            end;
            Next;
          end;
        end;
      end;
      FLocalQry.Next;
    end;
  except on E: Exception do
    begin
       //error 상황.
      ShowMessage(E.Message + ' dataset open 불가. binder에는 있으나, 실제로 테이블이 없습니다.');
      FreeAndNil(aLocalQry);
    end;
  end;
  ///2012.10.05 협회 RDB 데이터 에서 종량 sum 하기.
  try
    with FKbmQry do
    begin
      if Active then close;
      Query.Text := 'exec APWORKS_LAND_KAPA_OBJECTS_SEL :Gubun_Code,:id';
      Params.ParamByName('Gubun_Code').AsString := tbl_gam_info.FieldByName('GUBUN_CODE').AsString;
      Params.ParamByName('id').AsInteger := StrToIntDef(tbl_gam_info.FieldByName('SA_NO').asstring, 0);
      Open;
      FintObjectCount := RecordCount;
      First;
      while not Eof do
      begin
        if FindField('VolumeCharge') = nil then
        begin
          VolumeField_Value := EmptyStr;
        end
        else VolumeField_Value := fieldByName('VolumeCharge').AsString;

        if (VolumeField_Value <> emptyStr) and (IsNumberOnly(VolumeField_Value)) then
       begin
          if (fieldByName('objgubun').AsString = '건물') and (fieldByName('DongGubun').AsString = '1') then
          begin
            BuildVolumeCharge := BuildVolumeCharge + Str2Currency(VolumeField_Value);
            DongCnt := DongCnt + 1
          end
          else if (fieldByName('objgubun').AsString = '수목') then
          begin
            TreeCnt := TreeCnt + fieldByName('Cnt').AsInteger;
            TreeVolumeCharge := TreeVolumeCharge + Str2Currency(VolumeField_Value);
          end
          else if (fieldByName('objgubun').AsString = '구축물') then
          begin
            StructureVolumeCharge := StructureVolumeCharge + Str2Currency(VolumeField_Value);
          end
          else if (fieldByName('objgubun').AsString = '영업권') then
          begin
            FintBisinessCount := FintBisinessCount + 1;
            BusinessVolumeCharge := BusinessVolumeCharge + Str2Currency(VolumeField_Value);
          end
        end;
        Next;
      end;
    end;
  except on E: Exception do
    begin
       //error 상황.
      ShowMessage(E.Message);
    end;
  end;
end;


///2012.10.05 아래 프로시져 전반적으로 수정됨.

procedure TXForm1.SumVolumeChargeForLand(var LandPrice,
  LandVolumeCharge: Currency; var LandCnt: Integer;
  ///2012.10.05 주석처리   const ATableName: string  ;
  var APublic10Price, APublic15Price, A10Price, A15Price: Currency);
var
  aLocalQry: TEasyQuery;
  APublicPriceField_Value, PriceField_Value, VolumeField_Value: string;
begin
  ///2012.10.05 다수개의 조서에서 종가 sum 해오기.
  try
    aLocalQry := TEasyQuery.Create(nil);
    aLocalQry.DatabaseName := ChildDataBase.DatabaseName;
    aLocalQry.SessionName := ChildDataBase.SessionName;
    FLocalQry.first;
    while not FLocalQry.Eof do
    begin
      if pos('pbs_land', FLocalQry.FieldByName('table_name').AsString) > 0 then //
      begin
        with (aLocalQry) do
        begin
          Close;
          Sql.Clear;
          Sql.add('Select * from ' + FLocalQry.FieldByName('table_name').AsString);
          Open;
          First;
          while not Eof do
          begin
            APublicPriceField_Value := fieldByName('PAmt').AsString; //개별공시지가
            PriceField_Value := fieldByName('GAmt').AsString; //보상평가금액
            //평가금액 배분.
            if (PriceField_Value <> emptyStr) and (IsNumberOnly(PriceField_Value)) then
            begin
              if FieldByName('RATIO').AsString = 'Y' then
                A15Price := A15Price + Str2Currency(PriceField_Value)
              else A10Price := A10Price + Str2Currency(PriceField_Value);
            end;
            //개별지가 배분
            if (APublicPriceField_Value <> emptyStr) and (IsNumberOnly(APublicPriceField_Value)) then
            begin
              if FieldByName('RATIO').AsString = 'Y' then
                APublic15Price := APublic15Price + Str2Currency(APublicPriceField_Value)
              else APublic10Price := APublic10Price + Str2Currency(APublicPriceField_Value);
            end;
            Next;
          end;
        end;
      end;
      FLocalQry.Next;
    end;
  except on E: Exception do
    begin
      //error 상황.
      ShowMessage(E.Message + ' dataset open 불가. binder에는 있으나, 실제로 테이블이 없습니다.');
      FreeAndNil(aLocalQry);
    end;
  end;
  ///2012.10.05 협회 RDB 데이터 에서 종량 sum 하기.
  try
    with FKbmQry do
    begin
      if Active then close;
      Query.Text := 'exec APWORKS_LAND_KAPA_LAND_SEL :Gubun_Code,:id';
      Params.ParamByName('Gubun_Code').AsString := tbl_gam_info.FieldByName('GUBUN_CODE').AsString;
      Params.ParamByName('id').AsInteger := StrToIntDef(tbl_gam_info.FieldByName('SA_NO').asstring, 0);
      Open;
      LandCnt := RecordCount;
      First;
      while not Eof do
      begin
        VolumeField_Value := fieldByName('VolumeCharge').AsString; //종량수수료.
        LandVolumeCharge := LandVolumeCharge + Str2Currency(VolumeField_Value);
        Next;
      end;
    end;
  except on E: Exception do
    begin
       //error 상황.
      ShowMessage(E.Message);
    end;
  end;

  //개별공시지가에 따라 산정한 지가의 총액이 감정평가액의 50%에 못미치는 경우에는
  //감정평가액의 50%에 상당하는 금액
  if (APublic10Price + APublic15Price) < ((A10Price + A15Price) / 2) then
  begin
    LandPrice := ((A10Price + A15Price) / 2);
    A10Price := (A10Price / 2);
    A15Price := (A15Price / 2);
    txtLaw.Visible := True;
    //감정평가금액.
    tbl0.FieldByName('Chk_Amt').AsInteger := 0;
  end
  else
  begin //나머지 경우엔. 개별공시지가 = 보상 평가금액
    LandPrice := (APublic10Price + APublic15Price);
    A10Price := APublic10Price;
    A15Price := APublic15Price;
    txtLaw.Visible := False;
    //개별공시지가.
    tbl0.FieldByName('Chk_Amt').AsInteger := 1;
  end;
end;




end.
//≒
                                                           
